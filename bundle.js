(()=>{"use strict";var n={28:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),a=r.n(t),o=r(645),i=r.n(o)()(a());i.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap);"]),i.push([n.id,':root {\n  --red: #e53935;\n  --green: #00897b;\n  --blue: #039be5;\n  --purple: #3949ab;\n  --mauve: #8e24aa;\n  --gameboardBackground: #80f1ff;\n  --gray: #f8f9fa;\n  --darkgray: #c7c9cc;\n  --primary: #18bc9c;\n  --contrast: #2c3e50;\n}\n\nbody {\n  height: 100dvh;\n  margin: 0;\n  padding: 0;\n  font-family: "roboto";\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n}\nheader {\n  height: 10%;\n  padding: 15px;\n  background-color: var(--contrast);\n  color: white;\n  font-weight: 500;\n  font-size: 3rem;\n}\nfooter {\n  height: 5%;\n  background-color: #c7c9cc;\n  padding: 10px;\n  color: var(--contrast);\n  text-align: center;\n}\nmain {\n  height: 85%;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n}\n.gameboardWrapper {\n  width: 100%;\n  display: flex;\n  align-content: center;\n  justify-content: space-evenly;\n}\nbutton {\n  padding: 10px;\n  width: 100px;\n  cursor: pointer;\n  border: 1px solid;\n  border-radius: 5px;\n  font-size: 1.2rem;\n  font-weight: 700;\n  background-color: var(--primary);\n  color: white;\n}\nbutton:hover {\n  filter: brightness(0.9);\n  scale: 1.1;\n}\ninput {\n  height: 30px;\n  padding: 10px;\n  font-size: 1.2rem;\n  border-radius: 5px;\n  border: 1px solid var(--contrast);\n}\ndialog {\n  padding: 50px;\n  text-align: center;\n  font-size: 1.2rem;\n  color: var(--contrast);\n  border-radius: 4px;\n  border: none;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\nwrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n  gap: 25px;\n}\n\n#creatorBtnWrapper {\n  flex-direction: column;\n}\n@media only screen and (max-width: 1100px) {\n  .gameboardWrapper {\n    flex-direction: column;\n    flex-wrap: wrap;\n    gap: 100px;\n  }\n}\n',"",{version:3,sources:["webpack://./src/styles.css"],names:[],mappings:"AACA;EACE,cAAc;EACd,gBAAgB;EAChB,eAAe;EACf,iBAAiB;EACjB,gBAAgB;EAChB,8BAA8B;EAC9B,eAAe;EACf,mBAAmB;EACnB,kBAAkB;EAClB,mBAAmB;AACrB;;AAEA;EACE,cAAc;EACd,SAAS;EACT,UAAU;EACV,qBAAqB;EACrB,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX;AACA;EACE,WAAW;EACX,aAAa;EACb,iCAAiC;EACjC,YAAY;EACZ,gBAAgB;EAChB,eAAe;AACjB;AACA;EACE,UAAU;EACV,yBAAyB;EACzB,aAAa;EACb,sBAAsB;EACtB,kBAAkB;AACpB;AACA;EACE,WAAW;EACX,mBAAmB;EACnB,aAAa;EACb,sBAAsB;AACxB;AACA;EACE,WAAW;EACX,aAAa;EACb,qBAAqB;EACrB,6BAA6B;AAC/B;AACA;EACE,aAAa;EACb,YAAY;EACZ,eAAe;EACf,iBAAiB;EACjB,kBAAkB;EAClB,iBAAiB;EACjB,gBAAgB;EAChB,gCAAgC;EAChC,YAAY;AACd;AACA;EACE,uBAAuB;EACvB,UAAU;AACZ;AACA;EACE,YAAY;EACZ,aAAa;EACb,iBAAiB;EACjB,kBAAkB;EAClB,iCAAiC;AACnC;AACA;EACE,aAAa;EACb,kBAAkB;EAClB,iBAAiB;EACjB,sBAAsB;EACtB,kBAAkB;EAClB,YAAY;EACZ,4CAA4C;AAC9C;AACA;EACE,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,gBAAgB;EAChB,SAAS;AACX;;AAEA;EACE,sBAAsB;AACxB;AACA;EACE;IACE,sBAAsB;IACtB,eAAe;IACf,UAAU;EACZ;AACF",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap");\n:root {\n  --red: #e53935;\n  --green: #00897b;\n  --blue: #039be5;\n  --purple: #3949ab;\n  --mauve: #8e24aa;\n  --gameboardBackground: #80f1ff;\n  --gray: #f8f9fa;\n  --darkgray: #c7c9cc;\n  --primary: #18bc9c;\n  --contrast: #2c3e50;\n}\n\nbody {\n  height: 100dvh;\n  margin: 0;\n  padding: 0;\n  font-family: "roboto";\n  display: flex;\n  flex-direction: column;\n  gap: 50px;\n}\nheader {\n  height: 10%;\n  padding: 15px;\n  background-color: var(--contrast);\n  color: white;\n  font-weight: 500;\n  font-size: 3rem;\n}\nfooter {\n  height: 5%;\n  background-color: #c7c9cc;\n  padding: 10px;\n  color: var(--contrast);\n  text-align: center;\n}\nmain {\n  height: 85%;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n}\n.gameboardWrapper {\n  width: 100%;\n  display: flex;\n  align-content: center;\n  justify-content: space-evenly;\n}\nbutton {\n  padding: 10px;\n  width: 100px;\n  cursor: pointer;\n  border: 1px solid;\n  border-radius: 5px;\n  font-size: 1.2rem;\n  font-weight: 700;\n  background-color: var(--primary);\n  color: white;\n}\nbutton:hover {\n  filter: brightness(0.9);\n  scale: 1.1;\n}\ninput {\n  height: 30px;\n  padding: 10px;\n  font-size: 1.2rem;\n  border-radius: 5px;\n  border: 1px solid var(--contrast);\n}\ndialog {\n  padding: 50px;\n  text-align: center;\n  font-size: 1.2rem;\n  color: var(--contrast);\n  border-radius: 4px;\n  border: none;\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n}\nwrapper {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 20px;\n  gap: 25px;\n}\n\n#creatorBtnWrapper {\n  flex-direction: column;\n}\n@media only screen and (max-width: 1100px) {\n  .gameboardWrapper {\n    flex-direction: column;\n    flex-wrap: wrap;\n    gap: 100px;\n  }\n}\n'],sourceRoot:""}]);const A=i},744:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),a=r.n(t),o=r(645),i=r.n(o)()(a());i.push([n.id,".ship {\n  border-radius: 10px;\n  border: none;\n  color: white;\n  background-color: var(--contrast);\n  text-align: center;\n}\n.carrier {\n  background-color: var(--red);\n}\n.battleship {\n  background-color: var(--green);\n}\n.submarine {\n  background-color: var(--blue);\n}\n.cruiser {\n  background-color: var(--purple);\n}\n.destroyer {\n  background-color: var(--mauve);\n}\n","",{version:3,sources:["webpack://./src/styles/cell.css"],names:[],mappings:"AAAA;EACE,mBAAmB;EACnB,YAAY;EACZ,YAAY;EACZ,iCAAiC;EACjC,kBAAkB;AACpB;AACA;EACE,4BAA4B;AAC9B;AACA;EACE,8BAA8B;AAChC;AACA;EACE,6BAA6B;AAC/B;AACA;EACE,+BAA+B;AACjC;AACA;EACE,8BAA8B;AAChC",sourcesContent:[".ship {\n  border-radius: 10px;\n  border: none;\n  color: white;\n  background-color: var(--contrast);\n  text-align: center;\n}\n.carrier {\n  background-color: var(--red);\n}\n.battleship {\n  background-color: var(--green);\n}\n.submarine {\n  background-color: var(--blue);\n}\n.cruiser {\n  background-color: var(--purple);\n}\n.destroyer {\n  background-color: var(--mauve);\n}\n"],sourceRoot:""}]);const A=i},548:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),a=r.n(t),o=r(645),i=r.n(o)()(a());i.push([n.id,"#gameCreatorWrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  align-items: center;\n}\n.shipWrapper {\n  display: flex;\n  gap: 5px;\n  border: 2px solid var(--contrast);\n  border-radius: 4px;\n  padding: 10px;\n  width: 120px;\n}\n\n#shipTable {\n  justify-self: center;\n  width: 50%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 10px;\n}\n.shipElement {\n  cursor: pointer;\n  font-weight: 700;\n  color: var(--contrast);\n  background: none;\n}\n.shipElement:hover {\n  filter: brightness(1.5);\n  scale: 1.1;\n}\n#carrierWrapper:hover {\n  color: var(--red);\n}\n#battleshipWrapper:hover {\n  color: var(--green);\n}\n#submarineWrapper:hover {\n  color: var(--blue);\n}\n#cruiserWrapper:hover {\n  color: var(--purple);\n}\n#destroyerWrapper:hover {\n  color: var(--mauve);\n}\n#creationGameboardWrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n","",{version:3,sources:["webpack://./src/styles/gameCreatorDialog.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,mBAAmB;AACrB;AACA;EACE,aAAa;EACb,QAAQ;EACR,iCAAiC;EACjC,kBAAkB;EAClB,aAAa;EACb,YAAY;AACd;;AAEA;EACE,oBAAoB;EACpB,UAAU;EACV,aAAa;EACb,eAAe;EACf,8BAA8B;EAC9B,SAAS;AACX;AACA;EACE,eAAe;EACf,gBAAgB;EAChB,sBAAsB;EACtB,gBAAgB;AAClB;AACA;EACE,uBAAuB;EACvB,UAAU;AACZ;AACA;EACE,iBAAiB;AACnB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,kBAAkB;AACpB;AACA;EACE,oBAAoB;AACtB;AACA;EACE,mBAAmB;AACrB;AACA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;AACX",sourcesContent:["#gameCreatorWrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  align-items: center;\n}\n.shipWrapper {\n  display: flex;\n  gap: 5px;\n  border: 2px solid var(--contrast);\n  border-radius: 4px;\n  padding: 10px;\n  width: 120px;\n}\n\n#shipTable {\n  justify-self: center;\n  width: 50%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  gap: 10px;\n}\n.shipElement {\n  cursor: pointer;\n  font-weight: 700;\n  color: var(--contrast);\n  background: none;\n}\n.shipElement:hover {\n  filter: brightness(1.5);\n  scale: 1.1;\n}\n#carrierWrapper:hover {\n  color: var(--red);\n}\n#battleshipWrapper:hover {\n  color: var(--green);\n}\n#submarineWrapper:hover {\n  color: var(--blue);\n}\n#cruiserWrapper:hover {\n  color: var(--purple);\n}\n#destroyerWrapper:hover {\n  color: var(--mauve);\n}\n#creationGameboardWrapper {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n}\n"],sourceRoot:""}]);const A=i},131:(n,e,r)=>{r.d(e,{Z:()=>A});var t=r(537),a=r.n(t),o=r(645),i=r.n(o)()(a());i.push([n.id,".gameboadContainer {\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  gap: 15px;\n}\n.gameBoard {\n  height: 500px;\n  width: 500px;\n  padding: 5px;\n  border-radius: 2px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  gap: 5px;\n  box-shadow:\n    rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n  background-color: var(--gameboardBackground);\n}\n.gameboardTitle {\n  font-size: 2rem;\n}\n.information {\n  font-size: 1.6rem;\n  font-weight: 500;\n  text-align: center;\n}\n.cell {\n  display: grid;\n  align-content: center;\n  border-radius: 2px;\n  background-color: rgba(0, 0, 0, 0.15);\n  text-align: center;\n  font-weight: 600;\n}\n.cell:hover {\n  cursor: crosshair;\n  scale: 1.1;\n}\n@media only screen and (max-width: 600px) {\n  .gameBoard {\n    height: 300px;\n    width: 300px;\n  }\n}\n","",{version:3,sources:["webpack://./src/styles/gameboard.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,SAAS;AACX;AACA;EACE,aAAa;EACb,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,aAAa;EACb,sCAAsC;EACtC,mCAAmC;EACnC,QAAQ;EACR;;uCAEqC;EACrC,4CAA4C;AAC9C;AACA;EACE,eAAe;AACjB;AACA;EACE,iBAAiB;EACjB,gBAAgB;EAChB,kBAAkB;AACpB;AACA;EACE,aAAa;EACb,qBAAqB;EACrB,kBAAkB;EAClB,qCAAqC;EACrC,kBAAkB;EAClB,gBAAgB;AAClB;AACA;EACE,iBAAiB;EACjB,UAAU;AACZ;AACA;EACE;IACE,aAAa;IACb,YAAY;EACd;AACF",sourcesContent:[".gameboadContainer {\n  display: flex;\n  flex-direction: column-reverse;\n  align-items: center;\n  gap: 15px;\n}\n.gameBoard {\n  height: 500px;\n  width: 500px;\n  padding: 5px;\n  border-radius: 2px;\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  grid-template-rows: repeat(10, 1fr);\n  gap: 5px;\n  box-shadow:\n    rgba(0, 0, 0, 0.16) 0px 10px 36px 0px,\n    rgba(0, 0, 0, 0.06) 0px 0px 0px 1px;\n  background-color: var(--gameboardBackground);\n}\n.gameboardTitle {\n  font-size: 2rem;\n}\n.information {\n  font-size: 1.6rem;\n  font-weight: 500;\n  text-align: center;\n}\n.cell {\n  display: grid;\n  align-content: center;\n  border-radius: 2px;\n  background-color: rgba(0, 0, 0, 0.15);\n  text-align: center;\n  font-weight: 600;\n}\n.cell:hover {\n  cursor: crosshair;\n  scale: 1.1;\n}\n@media only screen and (max-width: 600px) {\n  .gameBoard {\n    height: 300px;\n    width: 300px;\n  }\n}\n"],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(t)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);t&&i[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var o={},i=[],A=0;A<n.length;A++){var s=n[A],c=t.base?s[0]+t.base:s[0],l=o[c]||0,p="".concat(c," ").concat(l);o[c]=l+1;var d=r(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var C=a(u,t);t.byIndex=A,e.splice(A,0,{identifier:p,updater:C,references:1})}i.push(p)}return i}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var o=t(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var A=r(o[i]);e[A].references--}for(var s=t(n,a),c=0;c<o.length;c++){var l=r(o[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var o=r.sourceMap;o&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function r(t){var a=e[t];if(void 0!==a)return a.exports;var o=e[t]={id:t,exports:{}};return n[t](o,o.exports,r),o.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),r.nc=void 0,(()=>{function n(n){const e=[],r=[],t=[];for(let n=0;n<10;n+=1)e.push(new Array(10).fill(null));return{getGameboardArray:()=>e,getName:()=>n.toString(),placeShip:function(n,r,a,o="horizontal"){if(r<0||r>10||a<0||a>10)return!1;if("vertical"===o){if(r+n.getLength()>e.length)return!1;for(let t=0;t<n.getLength();t+=1)if(null!==e[r+t][a])return!1;for(let o=0;o<n.getLength();o+=1)e[r+o].splice(a,1,n),t.push(n);return!0}if(a+n.getLength()>e[r].length)return!1;for(let t=0;t<n.getLength();t+=1)if(null!==e[r][a+t])return!1;for(let o=0;o<n.getLength();o+=1)e[r].splice(a+o,1,n),t.push(n);return!0},receiveAttack:function(n,t){if(n<0||n>10||t<0||t>10)return!1;const a=e[n][t];return!r.some((e=>e.y===n&&e.x===t))&&"missed"!==a&&(r.push({y:n,x:t}),null===a?(e[n].splice(t,1,"missed"),!0):(a.hit(),e[n].splice(t,1,{isHit:!0,ship:a}),!0))},areAllSunk:function(){return t.every((n=>!0===n.isSunk()))}}}function e(n,e,r=!0,t="human"){const a=e(n);let o=r;return{getName:()=>n,getNature:()=>t,getGameboard:()=>a,getTurn:()=>o,toggleTurn:()=>(o=!o,o),attack:(n,e,r)=>n.getGameboard().receiveAttack(e,r),hasWon:n=>n.getGameboard().areAllSunk()}}function t(n){if(!["Carrier","Battleship","Cruiser","Submarine","Destroyer"].includes(n))throw new Error("Name isn't valid");const e="Carrier"===n?5:"Battleship"===n?4:"Cruiser"===n||"Submarine"===n?3:"Destroyer"===n?2:null;let r=e;return{getName:()=>n,getLength:()=>e,getHitPoints:()=>r,hit:function(){if(0===r)throw new Error("Ship is already at 0 hitpoints");r-=1},isSunk:()=>0===r}}function a(r){const a=e("computer",n,!1,"computer");function o(){return Math.floor(10*Math.random())}return function(){function n(e){a.getGameboard().placeShip(t(e),o(),o())||n(e)}r.forEach((e=>{for(let r=0;r<e.quantity;r+=1)n(e.name)}))}(),a}var o=r(379),i=r.n(o),A=r(795),s=r.n(A),c=r(569),l=r.n(c),p=r(565),d=r.n(p),u=r(216),C=r.n(u),g=r(589),m=r.n(g),f=r(131),h={};function B(n,e){const r=document.createElement(n);return e&&Object.keys(e).forEach((n=>{r.setAttribute(n,e[n])})),r}function E(n,e,r){const t=document.querySelector(".main"),a=document.querySelector(".description");"turn"===n&&(t.textContent=`It is ${e.getName()}'s Turn`),"win"===n&&(t.textContent=`${e.getName()} lost all their ships!`,a.textContent=`${r.getName()} Has Won!`)}h.styleTagTransform=m(),h.setAttributes=d(),h.insert=l().bind(null,"head"),h.domAPI=s(),h.insertStyleElement=C(),i()(f.Z,h),f.Z&&f.Z.locals&&f.Z.locals;var b=r(744),x={};function v(){const n=B("span",{class:"material-symbols-outlined"});n.textContent="skull";const e=B("span",{class:"material-symbols-outlined"});e.textContent="local_fire_department";const r=B("span",{class:"material-symbols-outlined"});return r.textContent="close",{destroyed:n,fire:e,missed:r}}function y(n,e,r,t,a,o){const i=B("div",{id:`${e},${r}`,class:"cell"});function A(){a.attack(t,...i.id.split(","))&&(E("turn",t,a),t.getGameboard().areAllSunk()&&E("win",t,a),a.getGameboard().areAllSunk()&&E("win",a,t),"computer"===t.getNature()?(a.toggleTurn(),setTimeout((()=>{(function(){function n(){return Math.floor(10*Math.random())}return{computerAttack:function e(r,t){r.attack(t,n(),n())||e(r,t)}}})().computerAttack(t,a),o(a,t),E("turn",a,t),a.toggleTurn(),t.getGameboard().areAllSunk()&&E("win",t,a),a.getGameboard().areAllSunk()&&E("win",a,t)}),400)):(t.toggleTurn(),a.toggleTurn()))}i.addEventListener("click",(()=>{t.getGameboard().areAllSunk()||a.getGameboard().areAllSunk()||a.getTurn()&&(A(),o(t,a))}));const s=n[e][r];if(s){if(s.isHit)return i.classList.add("ship"),s.ship.isSunk()?(i.appendChild(v().destroyed),i.classList.add(s.ship.getName().toLowerCase())):i.appendChild(v().fire),i;if("missed"===s)return i.appendChild(v().missed),i;if("human"===t.getNature())return i.classList.add(s.getName().toLowerCase(),"ship"),i}return i}function k(n,e){const r=document.querySelector(`#${n.getNature()}`),t=n.getGameboard().getGameboardArray();r.innerHTML="";for(let a=0;a<t.length;a+=1)for(let o=0;o<t.length;o+=1){const i=y(t,a,o,n,e,k);r.appendChild(i)}}function w(n,e,r,a,o,i){const A=B("div",{id:"gameCreatorWrapper"}),s=B("div",{id:"creationGameboardWrapper"}),c=B("div",{id:"creationGameboard",class:"gameBoard"}),l=B("div",{id:"creationButtonWrapper"}),p=B("button",{id:"toggleAxisBtn",class:"button"}),d=B("button",{id:"startGameBtn",class:"button"});p.textContent="horizontal axis",d.textContent="Start Game";let u="horizontal";p.addEventListener("click",(()=>{u="horizontal"===u?"vertical":"horizontal",p.textContent=`${u} axis`})),d.addEventListener("click",(()=>{k(n,e),k(e,n),o.close()}));const C=n.getGameboard().getGameboardArray();!function(n,e,r){const t=B("div",{id:"shipTable"});n.forEach((n=>{const r=B("div",{id:`${n.name.toLowerCase()}Wrapper`,class:"shipWrapper"}),a=B("div",{id:n.name,class:`shipElement ${n.name.toLowerCase()}`});a.textContent=n.name;const o=B("div",{id:n.name,class:"shipQuantity"});o.textContent=n.quantity,a.addEventListener("click",(()=>{n.quantity&&e(n.name)})),r.appendChild(a),r.appendChild(o),t.appendChild(r)})),r.appendChild(t)}(r,i,A);for(let A=0;A<C.length;A+=1)for(let l=0;l<C.length;l+=1){const p=B("div",{id:`${A},${l}`,class:"cell"});C[A][l]&&p.classList.add(C[A][l].getName().toLowerCase(),"ship"),p.addEventListener("click",(()=>{const c=r.findIndex((n=>n.name===a()));a()&&r[c].quantity&&n.getGameboard().placeShip(t(a()),A,l,u)&&(r[c].quantity-=1,s.remove(),document.querySelector("#shipTable").remove(),w(n,e,r,a,o,i))})),c.appendChild(p)}l.appendChild(p),l.appendChild(d),s.appendChild(c),s.appendChild(l),A.appendChild(s),o.appendChild(A)}x.styleTagTransform=m(),x.setAttributes=d(),x.insert=l().bind(null,"head"),x.domAPI=s(),x.insertStyleElement=C(),i()(b.Z,x),b.Z&&b.Z.locals&&b.Z.locals;var S=r(548),W={};W.styleTagTransform=m(),W.setAttributes=d(),W.insert=l().bind(null,"head"),W.domAPI=s(),W.insertStyleElement=C(),i()(S.Z,W),S.Z&&S.Z.locals&&S.Z.locals;var T=r(28),Z={};Z.styleTagTransform=m(),Z.setAttributes=d(),Z.insert=l().bind(null,"head"),Z.domAPI=s(),Z.insertStyleElement=C(),i()(T.Z,Z),T.Z&&T.Z.locals&&T.Z.locals,function(){const r=document.querySelector("#gamemodeDialog");r.showModal();const t=document.querySelector("#humanButton"),o=document.querySelector("#aiButton");t.addEventListener("click",(()=>{})),o.addEventListener("click",(()=>{r.close(),function(n,e,r){const t=[{name:"Carrier",quantity:1},{name:"Battleship",quantity:1},{name:"Cruiser",quantity:1},{name:"Submarine",quantity:2},{name:"Destroyer",quantity:3}];let o=null;function i(n){o=n}function A(){return o}const s=document.querySelector("#gameCreatorDialog");s.showModal(),document.querySelector("#gameCreatorForm").addEventListener("submit",(()=>{const r=document.getElementById("playerName").value,o=n(r,e);{const n=a(t);s.innerHTML="",w(o,n,t,A,s,i)}}))}(e,n)}))}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJ1RkFHSUEsRSxNQUEwQixHQUE0QixLQUMxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSxpS0FFekNILEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUkseXZEQWtHdEMsR0FBRyxDQUFDLFFBQVUsRUFBRSxRQUFVLENBQUMsOEJBQThCLE1BQVEsR0FBRyxTQUFXLHc2QkFBdzZCLGVBQWlCLENBQUMsMDVEQUE4NUQsV0FBYSxNQUV2N0YsUyxnRUN2R0lILEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUkscVlBc0J0QyxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyxtQ0FBbUMsTUFBUSxHQUFHLFNBQVcsMExBQTBMLGVBQWlCLENBQUMsc1lBQXNZLFdBQWEsTUFFdHJCLFMsZ0VDMUJJSCxFLE1BQTBCLEdBQTRCLEtBRTFEQSxFQUF3QkMsS0FBSyxDQUFDQyxFQUFPQyxHQUFJLHc2QkFxRHRDLEdBQUcsQ0FBQyxRQUFVLEVBQUUsUUFBVSxDQUFDLGdEQUFnRCxNQUFRLEdBQUcsU0FBVyw2Y0FBNmMsZUFBaUIsQ0FBQyx5NkJBQXk2QixXQUFhLE1BRXovQyxTLGdFQ3pESUgsRSxNQUEwQixHQUE0QixLQUUxREEsRUFBd0JDLEtBQUssQ0FBQ0MsRUFBT0MsR0FBSSxrNkJBOEN0QyxHQUFHLENBQUMsUUFBVSxFQUFFLFFBQVUsQ0FBQyx3Q0FBd0MsTUFBUSxHQUFHLFNBQVcsNFpBQTRaLGVBQWlCLENBQUMsbTZCQUFtNkIsV0FBYSxNQUUxN0MsUyxVQy9DQUQsRUFBT0UsUUFBVSxTQUFVQyxHQUN6QixJQUFJQyxFQUFPLEdBNEVYLE9BekVBQSxFQUFLQyxTQUFXLFdBQ2QsT0FBT0MsS0FBS0MsS0FBSSxTQUFVQyxHQUN4QixJQUFJQyxFQUFVLEdBQ1ZDLE9BQStCLElBQVpGLEVBQUssR0FvQjVCLE9BbkJJQSxFQUFLLEtBQ1BDLEdBQVcsY0FBY0UsT0FBT0gsRUFBSyxHQUFJLFFBRXZDQSxFQUFLLEtBQ1BDLEdBQVcsVUFBVUUsT0FBT0gsRUFBSyxHQUFJLE9BRW5DRSxJQUNGRCxHQUFXLFNBQVNFLE9BQU9ILEVBQUssR0FBR0ksT0FBUyxFQUFJLElBQUlELE9BQU9ILEVBQUssSUFBTSxHQUFJLE9BRTVFQyxHQUFXTixFQUF1QkssR0FDOUJFLElBQ0ZELEdBQVcsS0FFVEQsRUFBSyxLQUNQQyxHQUFXLEtBRVRELEVBQUssS0FDUEMsR0FBVyxLQUVOQSxDQUNULElBQUdJLEtBQUssR0FDVixFQUdBVCxFQUFLVSxFQUFJLFNBQVdDLEVBQVNDLEVBQU9DLEVBQVFDLEVBQVVDLEdBQzdCLGlCQUFaSixJQUNUQSxFQUFVLENBQUMsQ0FBQyxLQUFNQSxPQUFTSyxLQUU3QixJQUFJQyxFQUF5QixDQUFDLEVBQzlCLEdBQUlKLEVBQ0YsSUFBSyxJQUFJSyxFQUFJLEVBQUdBLEVBQUloQixLQUFLTSxPQUFRVSxJQUFLLENBQ3BDLElBQUlyQixFQUFLSyxLQUFLZ0IsR0FBRyxHQUNQLE1BQU5yQixJQUNGb0IsRUFBdUJwQixJQUFNLEVBRWpDLENBRUYsSUFBSyxJQUFJc0IsRUFBSyxFQUFHQSxFQUFLUixFQUFRSCxPQUFRVyxJQUFNLENBQzFDLElBQUlmLEVBQU8sR0FBR0csT0FBT0ksRUFBUVEsSUFDekJOLEdBQVVJLEVBQXVCYixFQUFLLFdBR3JCLElBQVZXLFNBQ2MsSUFBWlgsRUFBSyxLQUdkQSxFQUFLLEdBQUssU0FBU0csT0FBT0gsRUFBSyxHQUFHSSxPQUFTLEVBQUksSUFBSUQsT0FBT0gsRUFBSyxJQUFNLEdBQUksTUFBTUcsT0FBT0gsRUFBSyxHQUFJLE1BRi9GQSxFQUFLLEdBQUtXLEdBTVZILElBQ0dSLEVBQUssSUFHUkEsRUFBSyxHQUFLLFVBQVVHLE9BQU9ILEVBQUssR0FBSSxNQUFNRyxPQUFPSCxFQUFLLEdBQUksS0FDMURBLEVBQUssR0FBS1EsR0FIVlIsRUFBSyxHQUFLUSxHQU1WRSxJQUNHVixFQUFLLElBR1JBLEVBQUssR0FBSyxjQUFjRyxPQUFPSCxFQUFLLEdBQUksT0FBT0csT0FBT0gsRUFBSyxHQUFJLEtBQy9EQSxFQUFLLEdBQUtVLEdBSFZWLEVBQUssR0FBSyxHQUFHRyxPQUFPTyxJQU14QmQsRUFBS0wsS0FBS1MsR0FDWixDQUNGLEVBQ09KLENBQ1QsQyxVQ2xGQUosRUFBT0UsUUFBVSxTQUFVTSxHQUN6QixJQUFJQyxFQUFVRCxFQUFLLEdBQ2ZnQixFQUFhaEIsRUFBSyxHQUN0QixJQUFLZ0IsRUFDSCxPQUFPZixFQUVULEdBQW9CLG1CQUFUZ0IsS0FBcUIsQ0FDOUIsSUFBSUMsRUFBU0QsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVTixNQUN6RE8sRUFBTywrREFBK0RwQixPQUFPZSxHQUM3RU0sRUFBZ0IsT0FBT3JCLE9BQU9vQixFQUFNLE9BQ3hDLE1BQU8sQ0FBQ3RCLEdBQVNFLE9BQU8sQ0FBQ3FCLElBQWdCbkIsS0FBSyxLQUNoRCxDQUNBLE1BQU8sQ0FBQ0osR0FBU0ksS0FBSyxLQUN4QixDLFVDYkEsSUFBSW9CLEVBQWMsR0FDbEIsU0FBU0MsRUFBcUJDLEdBRTVCLElBREEsSUFBSUMsR0FBVSxFQUNMdEIsRUFBSSxFQUFHQSxFQUFJbUIsRUFBWXJCLE9BQVFFLElBQ3RDLEdBQUltQixFQUFZbkIsR0FBR3FCLGFBQWVBLEVBQVksQ0FDNUNDLEVBQVN0QixFQUNULEtBQ0YsQ0FFRixPQUFPc0IsQ0FDVCxDQUNBLFNBQVNDLEVBQWFqQyxFQUFNa0MsR0FHMUIsSUFGQSxJQUFJQyxFQUFhLENBQUMsRUFDZEMsRUFBYyxHQUNUMUIsRUFBSSxFQUFHQSxFQUFJVixFQUFLUSxPQUFRRSxJQUFLLENBQ3BDLElBQUlOLEVBQU9KLEVBQUtVLEdBQ1piLEVBQUtxQyxFQUFRRyxLQUFPakMsRUFBSyxHQUFLOEIsRUFBUUcsS0FBT2pDLEVBQUssR0FDbERrQyxFQUFRSCxFQUFXdEMsSUFBTyxFQUMxQmtDLEVBQWEsR0FBR3hCLE9BQU9WLEVBQUksS0FBS1UsT0FBTytCLEdBQzNDSCxFQUFXdEMsR0FBTXlDLEVBQVEsRUFDekIsSUFBSUMsRUFBb0JULEVBQXFCQyxHQUN6Q1MsRUFBTSxDQUNSQyxJQUFLckMsRUFBSyxHQUNWUSxNQUFPUixFQUFLLEdBQ1pzQyxVQUFXdEMsRUFBSyxHQUNoQlUsU0FBVVYsRUFBSyxHQUNmVyxNQUFPWCxFQUFLLElBRWQsSUFBMkIsSUFBdkJtQyxFQUNGVixFQUFZVSxHQUFtQkksYUFDL0JkLEVBQVlVLEdBQW1CSyxRQUFRSixPQUNsQyxDQUNMLElBQUlJLEVBQVVDLEVBQWdCTCxFQUFLTixHQUNuQ0EsRUFBUVksUUFBVXBDLEVBQ2xCbUIsRUFBWWtCLE9BQU9yQyxFQUFHLEVBQUcsQ0FDdkJxQixXQUFZQSxFQUNaYSxRQUFTQSxFQUNURCxXQUFZLEdBRWhCLENBQ0FQLEVBQVl6QyxLQUFLb0MsRUFDbkIsQ0FDQSxPQUFPSyxDQUNULENBQ0EsU0FBU1MsRUFBZ0JMLEVBQUtOLEdBQzVCLElBQUljLEVBQU1kLEVBQVFlLE9BQU9mLEdBWXpCLE9BWEFjLEVBQUlFLE9BQU9WLEdBQ0csU0FBaUJXLEdBQzdCLEdBQUlBLEVBQVEsQ0FDVixHQUFJQSxFQUFPVixNQUFRRCxFQUFJQyxLQUFPVSxFQUFPdkMsUUFBVTRCLEVBQUk1QixPQUFTdUMsRUFBT1QsWUFBY0YsRUFBSUUsV0FBYVMsRUFBT3JDLFdBQWEwQixFQUFJMUIsVUFBWXFDLEVBQU9wQyxRQUFVeUIsRUFBSXpCLE1BQ3pKLE9BRUZpQyxFQUFJRSxPQUFPVixFQUFNVyxFQUNuQixNQUNFSCxFQUFJSSxRQUVSLENBRUYsQ0FDQXhELEVBQU9FLFFBQVUsU0FBVUUsRUFBTWtDLEdBRy9CLElBQUltQixFQUFrQnBCLEVBRHRCakMsRUFBT0EsR0FBUSxHQURma0MsRUFBVUEsR0FBVyxDQUFDLEdBR3RCLE9BQU8sU0FBZ0JvQixHQUNyQkEsRUFBVUEsR0FBVyxHQUNyQixJQUFLLElBQUk1QyxFQUFJLEVBQUdBLEVBQUkyQyxFQUFnQjdDLE9BQVFFLElBQUssQ0FDL0MsSUFDSTZDLEVBQVF6QixFQURLdUIsRUFBZ0IzQyxJQUVqQ21CLEVBQVkwQixHQUFPWixZQUNyQixDQUVBLElBREEsSUFBSWEsRUFBcUJ2QixFQUFhcUIsRUFBU3BCLEdBQ3RDdUIsRUFBSyxFQUFHQSxFQUFLSixFQUFnQjdDLE9BQVFpRCxJQUFNLENBQ2xELElBQ0lDLEVBQVM1QixFQURLdUIsRUFBZ0JJLElBRUssSUFBbkM1QixFQUFZNkIsR0FBUWYsYUFDdEJkLEVBQVk2QixHQUFRZCxVQUNwQmYsRUFBWWtCLE9BQU9XLEVBQVEsR0FFL0IsQ0FDQUwsRUFBa0JHLENBQ3BCLENBQ0YsQyxVQ2pGQSxJQUFJRyxFQUFPLENBQUMsRUErQlovRCxFQUFPRSxRQVBQLFNBQTBCOEQsRUFBUUMsR0FDaEMsSUFBSUMsRUF0Qk4sU0FBbUJBLEdBQ2pCLFFBQTRCLElBQWpCSCxFQUFLRyxHQUF5QixDQUN2QyxJQUFJQyxFQUFjQyxTQUFTQyxjQUFjSCxHQUd6QyxHQUFJSSxPQUFPQyxtQkFBcUJKLGFBQXVCRyxPQUFPQyxrQkFDNUQsSUFHRUosRUFBY0EsRUFBWUssZ0JBQWdCQyxJQUM1QyxDQUFFLE1BQU9DLEdBRVBQLEVBQWMsSUFDaEIsQ0FFRkosRUFBS0csR0FBVUMsQ0FDakIsQ0FDQSxPQUFPSixFQUFLRyxFQUNkLENBSWVTLENBQVVYLEdBQ3ZCLElBQUtFLEVBQ0gsTUFBTSxJQUFJVSxNQUFNLDJHQUVsQlYsRUFBT1csWUFBWVosRUFDckIsQyxVQ3ZCQWpFLEVBQU9FLFFBTlAsU0FBNEJvQyxHQUMxQixJQUFJd0MsRUFBVVYsU0FBU1csY0FBYyxTQUdyQyxPQUZBekMsRUFBUTBDLGNBQWNGLEVBQVN4QyxFQUFRMkMsWUFDdkMzQyxFQUFRMEIsT0FBT2MsRUFBU3hDLEVBQVFBLFNBQ3pCd0MsQ0FDVCxDLGdCQ0NBOUUsRUFBT0UsUUFOUCxTQUF3Q2dGLEdBQ3RDLElBQUlDLEVBQW1ELEtBQ25EQSxHQUNGRCxFQUFhRSxhQUFhLFFBQVNELEVBRXZDLEMsVUNvREFuRixFQUFPRSxRQWpCUCxTQUFnQm9DLEdBQ2QsR0FBd0Isb0JBQWI4QixTQUNULE1BQU8sQ0FDTGQsT0FBUSxXQUFtQixFQUMzQkUsT0FBUSxXQUFtQixHQUcvQixJQUFJMEIsRUFBZTVDLEVBQVErQyxtQkFBbUIvQyxHQUM5QyxNQUFPLENBQ0xnQixPQUFRLFNBQWdCVixJQWpENUIsU0FBZXNDLEVBQWM1QyxFQUFTTSxHQUNwQyxJQUFJQyxFQUFNLEdBQ05ELEVBQUkxQixXQUNOMkIsR0FBTyxjQUFjbEMsT0FBT2lDLEVBQUkxQixTQUFVLFFBRXhDMEIsRUFBSTVCLFFBQ042QixHQUFPLFVBQVVsQyxPQUFPaUMsRUFBSTVCLE1BQU8sT0FFckMsSUFBSU4sT0FBaUMsSUFBZGtDLEVBQUl6QixNQUN2QlQsSUFDRm1DLEdBQU8sU0FBU2xDLE9BQU9pQyxFQUFJekIsTUFBTVAsT0FBUyxFQUFJLElBQUlELE9BQU9pQyxFQUFJekIsT0FBUyxHQUFJLE9BRTVFMEIsR0FBT0QsRUFBSUMsSUFDUG5DLElBQ0ZtQyxHQUFPLEtBRUxELEVBQUk1QixRQUNONkIsR0FBTyxLQUVMRCxFQUFJMUIsV0FDTjJCLEdBQU8sS0FFVCxJQUFJQyxFQUFZRixFQUFJRSxVQUNoQkEsR0FBNkIsb0JBQVRyQixPQUN0Qm9CLEdBQU8sdURBQXVEbEMsT0FBT2MsS0FBS0UsU0FBU0MsbUJBQW1CQyxLQUFLQyxVQUFVZ0IsTUFBZSxRQUt0SVIsRUFBUWdELGtCQUFrQnpDLEVBQUtxQyxFQUFjNUMsRUFBUUEsUUFDdkQsQ0FvQk1pRCxDQUFNTCxFQUFjNUMsRUFBU00sRUFDL0IsRUFDQVksT0FBUSxZQXJCWixTQUE0QjBCLEdBRTFCLEdBQWdDLE9BQTVCQSxFQUFhTSxXQUNmLE9BQU8sRUFFVE4sRUFBYU0sV0FBV0MsWUFBWVAsRUFDdEMsQ0FnQk1RLENBQW1CUixFQUNyQixFQUVKLEMsVUM5Q0FsRixFQUFPRSxRQVZQLFNBQTJCMkMsRUFBS3FDLEdBQzlCLEdBQUlBLEVBQWFTLFdBQ2ZULEVBQWFTLFdBQVdDLFFBQVUvQyxNQUM3QixDQUNMLEtBQU9xQyxFQUFhVyxZQUNsQlgsRUFBYU8sWUFBWVAsRUFBYVcsWUFFeENYLEVBQWFMLFlBQVlULFNBQVMwQixlQUFlakQsR0FDbkQsQ0FDRixDLEdDWElrRCxFQUEyQixDQUFDLEVBR2hDLFNBQVNDLEVBQW9CQyxHQUU1QixJQUFJQyxFQUFlSCxFQUF5QkUsR0FDNUMsUUFBcUI3RSxJQUFqQjhFLEVBQ0gsT0FBT0EsRUFBYWhHLFFBR3JCLElBQUlGLEVBQVMrRixFQUF5QkUsR0FBWSxDQUNqRGhHLEdBQUlnRyxFQUVKL0YsUUFBUyxDQUFDLEdBT1gsT0FIQWlHLEVBQW9CRixHQUFVakcsRUFBUUEsRUFBT0UsUUFBUzhGLEdBRy9DaEcsRUFBT0UsT0FDZixDQ3JCQThGLEVBQW9CSSxFQUFLcEcsSUFDeEIsSUFBSXFHLEVBQVNyRyxHQUFVQSxFQUFPc0csV0FDN0IsSUFBT3RHLEVBQWlCLFFBQ3hCLElBQU0sRUFFUCxPQURBZ0csRUFBb0JPLEVBQUVGLEVBQVEsQ0FBRUcsRUFBR0gsSUFDNUJBLENBQU0sRUNMZEwsRUFBb0JPLEVBQUksQ0FBQ3JHLEVBQVN1RyxLQUNqQyxJQUFJLElBQUlDLEtBQU9ELEVBQ1hULEVBQW9CVyxFQUFFRixFQUFZQyxLQUFTVixFQUFvQlcsRUFBRXpHLEVBQVN3RyxJQUM1RUUsT0FBT0MsZUFBZTNHLEVBQVN3RyxFQUFLLENBQUVJLFlBQVksRUFBTUMsSUFBS04sRUFBV0MsSUFFMUUsRUNORFYsRUFBb0JXLEVBQUksQ0FBQy9ELEVBQUtvRSxJQUFVSixPQUFPSyxVQUFVQyxlQUFlQyxLQUFLdkUsRUFBS29FLEdDQWxGaEIsRUFBb0JvQixRQUFLaEcsRSxNQ0NWLFNBQVNpRyxFQUFVQyxHQUNoQyxNQUFNQyxFQUFZLEdBQ1pDLEVBQXNCLEdBQ3RCQyxFQUFjLEdBQ3BCLElBQUssSUFBSUMsRUFBSSxFQUFHQSxFQUFJLEdBQUlBLEdBQUssRUFDM0JILEVBQVV4SCxLQUFLLElBQUk0SCxNQUFNLElBQUlDLEtBQUssT0FpRXBDLE1BQU8sQ0FDTEMsa0JBL0R3QixJQUFNTixFQWdFOUJPLFFBakVjLElBQU1SLEVBQUtqSCxXQWtFekIwSCxVQS9ERixTQUFtQkMsRUFBTU4sRUFBR08sRUFBR0MsRUFBTyxjQUNwQyxHQUFJUixFQUFJLEdBQUtBLEVBQUksSUFBTU8sRUFBSSxHQUFLQSxFQUFJLEdBQUksT0FBTyxFQUUvQyxHQUFhLGFBQVRDLEVBQXFCLENBRXZCLEdBRDZCUixFQUFJTSxFQUFLRyxZQUFjWixFQUFVM0csT0FDcEMsT0FBTyxFQUVqQyxJQUFLLElBQUlFLEVBQUksRUFBR0EsRUFBSWtILEVBQUtHLFlBQWFySCxHQUFLLEVBRXpDLEdBRCtDLE9BQXhCeUcsRUFBVUcsRUFBSTVHLEdBQUdtSCxHQUNwQixPQUFPLEVBRzdCLElBQUssSUFBSW5ILEVBQUksRUFBR0EsRUFBSWtILEVBQUtHLFlBQWFySCxHQUFLLEVBQ3pDeUcsRUFBVUcsRUFBSTVHLEdBQUdxQyxPQUFPOEUsRUFBRyxFQUFHRCxHQUM5QlAsRUFBWTFILEtBQUtpSSxHQUVuQixPQUFPLENBQ1QsQ0FHQSxHQUQrQkMsRUFBSUQsRUFBS0csWUFBY1osRUFBVUcsR0FBRzlHLE9BQ3ZDLE9BQU8sRUFFbkMsSUFBSyxJQUFJRSxFQUFJLEVBQUdBLEVBQUlrSCxFQUFLRyxZQUFhckgsR0FBSyxFQUV6QyxHQUQrQyxPQUF4QnlHLEVBQVVHLEdBQUdPLEVBQUluSCxHQUNwQixPQUFPLEVBRzdCLElBQUssSUFBSUEsRUFBSSxFQUFHQSxFQUFJa0gsRUFBS0csWUFBYXJILEdBQUssRUFDekN5RyxFQUFVRyxHQUFHdkUsT0FBTzhFLEVBQUluSCxFQUFHLEVBQUdrSCxHQUM5QlAsRUFBWTFILEtBQUtpSSxHQUVuQixPQUFPLENBQ1QsRUFnQ0VJLGNBOUJGLFNBQXVCVixFQUFHTyxHQUN4QixHQUFJUCxFQUFJLEdBQUtBLEVBQUksSUFBTU8sRUFBSSxHQUFLQSxFQUFJLEdBQUksT0FBTyxFQUUvQyxNQUFNSSxFQUFPZCxFQUFVRyxHQUFHTyxHQUUxQixPQUFJVCxFQUFvQmMsTUFBTUMsR0FBZ0JBLEVBQVliLElBQU1BLEdBQUthLEVBQVlOLElBQU1BLEtBRTFFLFdBQVRJLElBRUpiLEVBQW9CekgsS0FBSyxDQUFFMkgsSUFBR08sTUFFakIsT0FBVEksR0FDRmQsRUFBVUcsR0FBR3ZFLE9BQU84RSxFQUFHLEVBQUcsV0FDbkIsSUFHVEksRUFBS0csTUFDTGpCLEVBQVVHLEdBQUd2RSxPQUFPOEUsRUFBRyxFQUFHLENBQUVRLE9BQU8sRUFBTVQsS0FBTUssS0FFeEMsR0FDVCxFQVdFSyxXQVRGLFdBQ0UsT0FBT2pCLEVBQVlrQixPQUFPWCxJQUEyQixJQUFsQkEsRUFBS1ksVUFDMUMsRUFTRixDQzlFZSxTQUFTQyxFQUFPdkIsRUFBTXdCLEVBQWNDLEdBQU8sRUFBTUMsRUFBUyxTQUN2RSxNQUFNQyxFQUFrQkgsRUFBYXhCLEdBQ3JDLElBQUk0QixFQUFTSCxFQWFiLE1BQU8sQ0FDTGpCLFFBWGMsSUFBTVIsRUFZcEI2QixVQVhnQixJQUFNSCxFQVl0QkksYUFYbUIsSUFBTUgsRUFZekJJLFFBZmMsSUFBTUgsRUFnQnBCSSxXQVppQixLQUNqQkosR0FBVUEsRUFDSEEsR0FXUEssT0FSYSxDQUFDQyxFQUFhOUIsRUFBR08sSUFBTXVCLEVBQVlKLGVBQWVoQixjQUFjVixFQUFHTyxHQVNoRndCLE9BUmNELEdBQWdCQSxFQUFZSixlQUFlVixhQVU3RCxDQ3hCZSxTQUFTZ0IsRUFBS3BDLEdBRTNCLElBRHFCLENBQUMsVUFBVyxhQUFjLFVBQVcsWUFBYSxhQUNyRHFDLFNBQVNyQyxHQUFPLE1BQU0sSUFBSTFDLE1BQU0sb0JBVWxELE1BQU1oRSxFQVBTLFlBQVQwRyxFQUEyQixFQUNsQixlQUFUQSxFQUE4QixFQUNyQixZQUFUQSxHQUNTLGNBQVRBLEVBRDJCLEVBRWxCLGNBQVRBLEVBQTZCLEVBQzFCLEtBR1QsSUFBSXNDLEVBQVloSixFQVVoQixNQUFPLENBQ0xrSCxRQVRjLElBQU1SLEVBVXBCYSxVQVRnQixJQUFNdkgsRUFVdEJpSixhQVRtQixJQUFNRCxFQVV6QnBCLElBVEYsV0FDRSxHQUFrQixJQUFkb0IsRUFBaUIsTUFBTSxJQUFJaEYsTUFBTSxrQ0FDckNnRixHQUFhLENBQ2YsRUFPRWhCLE9BTmEsSUFBb0IsSUFBZGdCLEVBUXZCLENDMUJlLFNBQVNFLEVBQWtCQyxHQUN4QyxNQUFNQyxFQUFpQm5CLEVBQU8sV0FBWXhCLEdBQVcsRUFBTyxZQUU1RCxTQUFTNEMsSUFDUCxPQUFPQyxLQUFLQyxNQUFzQixHQUFoQkQsS0FBS0UsU0FDekIsQ0FrQkEsT0FmQSxXQUNFLFNBQVNDLEVBQU0vQyxHQUNSMEMsRUFBZVosZUFBZXJCLFVBQVUyQixFQUFLcEMsR0FBTzJDLElBQW1CQSxNQUMxRUksRUFBTS9DLEVBQ1YsQ0FFQXlDLEVBQVdPLFNBQVN0QyxJQUNsQixJQUFLLElBQUlsSCxFQUFJLEVBQUdBLEVBQUlrSCxFQUFLdUMsU0FBVXpKLEdBQUssRUFDdEN1SixFQUFNckMsRUFBS1YsS0FDYixHQUdKLENBRUFrRCxHQUNPUixDQUNULEMseUhDakJJMUgsRUFBVSxDQUFDLEVDWEEsU0FBU21JLEVBQWtCQyxFQUFTQyxHQUNqRCxNQUFNN0YsRUFBVVYsU0FBU1csY0FBYzJGLEdBU3ZDLE9BUElDLEdBQ3FCL0QsT0FBT2dFLEtBQUtELEdBQ3BCTCxTQUFTdkksSUFDdEIrQyxFQUFRTSxhQUFhckQsRUFBTTRJLEVBQWdCNUksR0FBTSxJQUk5QytDLENBQ1QsQ0NYZSxTQUFTK0YsRUFBa0JDLEVBQU1DLEVBQVdDLEdBQ3pELE1BQU1DLEVBQWtCN0csU0FBU0MsY0FBYyxTQUN6QzZHLEVBQWtCOUcsU0FBU0MsY0FBYyxnQkFFbEMsU0FBVHlHLElBQWlCRyxFQUFnQkUsWUFBYyxTQUFTSixFQUFVakQsb0JBQ3pELFFBQVRnRCxJQUNGRyxFQUFnQkUsWUFBYyxHQUFHSixFQUFVakQsa0NBQzNDb0QsRUFBZ0JDLFlBQWMsR0FBR0gsRUFBVWxELHFCQUUvQyxDRklBeEYsRUFBUWdELGtCQUFvQixJQUM1QmhELEVBQVEwQyxjQUFnQixJQUVsQjFDLEVBQVEwQixPQUFTLFNBQWMsS0FBTSxRQUUzQzFCLEVBQVFlLE9BQVMsSUFDakJmLEVBQVErQyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTL0MsR0FLSixLQUFXLElBQVE4SSxRQUFTLElBQVFBLE8sYUdmdEQsRUFBVSxDQUFDLEVDVEEsU0FBU0MsSUFDdEIsTUFBTUMsRUFBWWIsRUFBa0IsT0FBUSxDQUFFYyxNQUFPLDhCQUNyREQsRUFBVUgsWUFBYyxRQUV4QixNQUFNSyxFQUFPZixFQUFrQixPQUFRLENBQUVjLE1BQU8sOEJBQ2hEQyxFQUFLTCxZQUFjLHdCQUVuQixNQUFNTSxFQUFTaEIsRUFBa0IsT0FBUSxDQUFFYyxNQUFPLDhCQUVsRCxPQURBRSxFQUFPTixZQUFjLFFBQ2QsQ0FBRUcsWUFBV0UsT0FBTUMsU0FDNUIsQ0NMZSxTQUFTQyxFQUFXQyxFQUFnQjdLLEVBQUc4SyxFQUFHQyxFQUFRQyxFQUFPQyxHQUN0RSxNQUFNMUQsRUFBT29DLEVBQWtCLE1BQU8sQ0FBRXhLLEdBQUksR0FBR2EsS0FBSzhLLElBQUtMLE1BQU8sU0E0QmhFLFNBQVNTLElBQ0hGLEVBQU12QyxPQUFPc0MsS0FBV3hELEVBQUtwSSxHQUFHZ00sTUFBTSxRQXRCMUNwQixFQUFrQixPQUFRZ0IsRUFBUUMsR0FFOUJELEVBQU96QyxlQUFlVixjQUFjbUMsRUFBa0IsTUFBT2dCLEVBQVFDLEdBQ3JFQSxFQUFNMUMsZUFBZVYsY0FBY21DLEVBQWtCLE1BQU9pQixFQUFPRCxHQXNCMUMsYUFBdkJBLEVBQU8xQyxhQWpCYjJDLEVBQU14QyxhQUVONEMsWUFBVyxNQ3pCQSxXQUNiLFNBQVNqQyxJQUNQLE9BQU9DLEtBQUtDLE1BQXNCLEdBQWhCRCxLQUFLRSxTQUN6QixDQUlBLE1BQU8sQ0FBRStCLGVBSFQsU0FBU0EsRUFBZU4sRUFBUUMsR0FDekJELEVBQU90QyxPQUFPdUMsRUFBTzdCLElBQW1CQSxNQUFvQmtDLEVBQWVOLEVBQVFDLEVBQzFGLEVBRUYsRURrQk1NLEdBQWFELGVBQWVOLEVBQVFDLEdBQ3BDQyxFQUFnQkQsRUFBT0QsR0FDdkJoQixFQUFrQixPQUFRaUIsRUFBT0QsR0FDakNDLEVBQU14QyxhQUVGdUMsRUFBT3pDLGVBQWVWLGNBQWNtQyxFQUFrQixNQUFPZ0IsRUFBUUMsR0FDckVBLEVBQU0xQyxlQUFlVixjQUFjbUMsRUFBa0IsTUFBT2lCLEVBQU9ELEVBQU8sR0FDN0UsT0FVQ0EsRUFBT3ZDLGFBQ1B3QyxFQUFNeEMsY0FHWixDQUVBakIsRUFBS2dFLGlCQUFpQixTQUFTLEtBdEN0QlIsRUFBT3pDLGVBQWVWLGNBQWdCb0QsRUFBTTFDLGVBQWVWLGNBeUM5RG9ELEVBQU16QyxZQUNSMkMsSUFDQUQsRUFBZ0JGLEVBQVFDLEdBQzFCLElBR0YsTUFBTVEsRUFBZ0JYLEVBQWU3SyxHQUFHOEssR0FFeEMsR0FBSVUsRUFBZSxDQUNqQixHQUFJQSxFQUFjN0QsTUFTaEIsT0FSQUosRUFBS2tFLFVBQVVDLElBQUksUUFFZkYsRUFBY3RFLEtBQUtZLFVBQ3JCUCxFQUFLeEQsWUFBWXdHLElBQWVDLFdBRWhDakQsRUFBS2tFLFVBQVVDLElBQUlGLEVBQWN0RSxLQUFLRixVQUFVMkUsZ0JBQzNDcEUsRUFBS3hELFlBQVl3RyxJQUFlRyxNQUVoQ25ELEVBR1QsR0FBc0IsV0FBbEJpRSxFQUVGLE9BREFqRSxFQUFLeEQsWUFBWXdHLElBQWVJLFFBQ3pCcEQsRUFHVCxHQUEyQixVQUF2QndELEVBQU8xQyxZQUVULE9BREFkLEVBQUtrRSxVQUFVQyxJQUFJRixFQUFjeEUsVUFBVTJFLGNBQWUsUUFDbkRwRSxDQUVYLENBQ0EsT0FBT0EsQ0FDVCxDRWhGZSxTQUFTMEQsRUFBZ0JGLEVBQVFDLEdBQzlDLE1BQU1ZLEVBQXFCdEksU0FBU0MsY0FBYyxJQUFJd0gsRUFBTzFDLGVBQ3ZEd0MsRUFBaUJFLEVBQU96QyxlQUFldkIsb0JBQzdDNkUsRUFBbUJDLFVBQVksR0FFL0IsSUFBSyxJQUFJN0wsRUFBSSxFQUFHQSxFQUFJNkssRUFBZS9LLE9BQVFFLEdBQUssRUFDOUMsSUFBSyxJQUFJOEssRUFBSSxFQUFHQSxFQUFJRCxFQUFlL0ssT0FBUWdMLEdBQUssRUFBRyxDQUNqRCxNQUFNdkQsRUFBT3FELEVBQVdDLEVBQWdCN0ssRUFBRzhLLEVBQUdDLEVBQVFDLEVBQU9DLEdBQzdEVyxFQUFtQjdILFlBQVl3RCxFQUNqQyxDQUVKLENDTmUsU0FBU3VFLEVBQ3RCN0IsRUFDQUMsRUFDQWpCLEVBQ0E4QyxFQUNBQyxFQUNBQyxHQUVBLE1BQU1DLEVBQVV2QyxFQUFrQixNQUFPLENBQUV4SyxHQUFJLHVCQUN6Q2dOLEVBQW1CeEMsRUFBa0IsTUFBTyxDQUFFeEssR0FBSSw2QkFDbER5TSxFQUFxQmpDLEVBQWtCLE1BQU8sQ0FBRXhLLEdBQUksb0JBQXFCc0wsTUFBTyxjQUNoRjJCLEVBQWdCekMsRUFBa0IsTUFBTyxDQUFFeEssR0FBSSwwQkFDL0NrTixFQUFhMUMsRUFBa0IsU0FBVSxDQUFFeEssR0FBSSxnQkFBaUJzTCxNQUFPLFdBQ3ZFNkIsRUFBZTNDLEVBQWtCLFNBQVUsQ0FBRXhLLEdBQUksZUFBZ0JzTCxNQUFPLFdBRTlFNEIsRUFBV2hDLFlBQWMsa0JBQ3pCaUMsRUFBYWpDLFlBQWMsYUFFM0IsSUFBSWpELEVBQU8sYUFDWGlGLEVBQVdkLGlCQUFpQixTQUFTLEtBQ25DbkUsRUFBZ0IsZUFBVEEsRUFBd0IsV0FBYSxhQUM1Q2lGLEVBQVdoQyxZQUFjLEdBQUdqRCxRQUFXLElBR3pDa0YsRUFBYWYsaUJBQWlCLFNBQVMsS0FDckNOLEVBQWdCaEIsRUFBV0MsR0FDM0JlLEVBQWdCZixFQUFXRCxHQUMzQitCLEVBQU9PLE9BQU8sSUFHaEIsTUFBTUMsRUFBWXZDLEVBQVUzQixlQUFldkIscUJDcEM5QixTQUF5QmtDLEVBQVlnRCxFQUFvQkMsR0FDdEUsTUFBTU8sRUFBWTlDLEVBQWtCLE1BQU8sQ0FBRXhLLEdBQUksY0FDakQ4SixFQUFXTyxTQUFTdEMsSUFDbEIsTUFBTXdGLEVBQWMvQyxFQUFrQixNQUFPLENBQzNDeEssR0FBSSxHQUFHK0gsRUFBS1YsS0FBS21GLHVCQUNqQmxCLE1BQU8sZ0JBR0hrQyxFQUFVaEQsRUFBa0IsTUFBTyxDQUN2Q3hLLEdBQUkrSCxFQUFLVixLQUNUaUUsTUFBTyxlQUFldkQsRUFBS1YsS0FBS21GLGtCQUVsQ2dCLEVBQVF0QyxZQUFjbkQsRUFBS1YsS0FFM0IsTUFBTWlELEVBQVdFLEVBQWtCLE1BQU8sQ0FBRXhLLEdBQUkrSCxFQUFLVixLQUFNaUUsTUFBTyxpQkFDbEVoQixFQUFTWSxZQUFjbkQsRUFBS3VDLFNBRTVCa0QsRUFBUXBCLGlCQUFpQixTQUFTLEtBQzVCckUsRUFBS3VDLFVBQVV3QyxFQUFtQi9FLEVBQUtWLEtBQUssSUFHbERrRyxFQUFZM0ksWUFBWTRJLEdBQ3hCRCxFQUFZM0ksWUFBWTBGLEdBRXhCZ0QsRUFBVTFJLFlBQVkySSxFQUFZLElBRXBDUixFQUFRbkksWUFBWTBJLEVBQ3RCLENEVUVHLENBQWdCM0QsRUFBWWdELEVBQW9CQyxHQUVoRCxJQUFLLElBQUlsTSxFQUFJLEVBQUdBLEVBQUl3TSxFQUFVMU0sT0FBUUUsR0FBSyxFQUN6QyxJQUFLLElBQUk4SyxFQUFJLEVBQUdBLEVBQUkwQixFQUFVMU0sT0FBUWdMLEdBQUssRUFBRyxDQUM1QyxNQUFNdkQsRUFBT29DLEVBQWtCLE1BQU8sQ0FBRXhLLEdBQUksR0FBR2EsS0FBSzhLLElBQUtMLE1BQU8sU0FFNUQrQixFQUFVeE0sR0FBRzhLLElBQUl2RCxFQUFLa0UsVUFBVUMsSUFBSWMsRUFBVXhNLEdBQUc4SyxHQUFHOUQsVUFBVTJFLGNBQWUsUUFFakZwRSxFQUFLZ0UsaUJBQWlCLFNBQVMsS0FDN0IsTUFBTXNCLEVBQWE1RCxFQUFXNkQsV0FBVzVGLEdBQVNBLEVBQUtWLE9BQVN1RixNQUc5REEsS0FDQTlDLEVBQVc0RCxHQUFZcEQsVUFDdkJRLEVBQVUzQixlQUFlckIsVUFBVTJCLEVBQUttRCxLQUFvQi9MLEVBQUc4SyxFQUFHMUQsS0FFbEU2QixFQUFXNEQsR0FBWXBELFVBQVksRUFDbkMwQyxFQUFpQnpKLFNBQ2pCWSxTQUFTQyxjQUFjLGNBQWNiLFNBQ3JDb0osRUFDRTdCLEVBQ0FDLEVBQ0FqQixFQUNBOEMsRUFDQUMsRUFDQUMsR0FFSixJQUdGTCxFQUFtQjdILFlBQVl3RCxFQUNqQyxDQUVGNkUsRUFBY3JJLFlBQVlzSSxHQUMxQkQsRUFBY3JJLFlBQVl1SSxHQUMxQkgsRUFBaUJwSSxZQUFZNkgsR0FDN0JPLEVBQWlCcEksWUFBWXFJLEdBQzdCRixFQUFRbkksWUFBWW9JLEdBQ3BCSCxFQUFPakksWUFBWW1JLEVBQ3JCLENMbEVBLEVBQVExSCxrQkFBb0IsSUFDNUIsRUFBUU4sY0FBZ0IsSUFFbEIsRUFBUWhCLE9BQVMsU0FBYyxLQUFNLFFBRTNDLEVBQVFYLE9BQVMsSUFDakIsRUFBUWdDLG1CQUFxQixJQUVoQixJQUFJLElBQVMsR0FLSixLQUFXLElBQVErRixRQUFTLElBQVFBLE8sYU9mdEQsRUFBVSxDQUFDLEVBRWYsRUFBUTlGLGtCQUFvQixJQUM1QixFQUFRTixjQUFnQixJQUVsQixFQUFRaEIsT0FBUyxTQUFjLEtBQU0sUUFFM0MsRUFBUVgsT0FBUyxJQUNqQixFQUFRZ0MsbUJBQXFCLElBRWhCLElBQUksSUFBUyxHQUtKLEtBQVcsSUFBUStGLFFBQVMsSUFBUUEsTyxZQ2Z0RCxFQUFVLENBQUMsRUFFZixFQUFROUYsa0JBQW9CLElBQzVCLEVBQVFOLGNBQWdCLElBRWxCLEVBQVFoQixPQUFTLFNBQWMsS0FBTSxRQUUzQyxFQUFRWCxPQUFTLElBQ2pCLEVBQVFnQyxtQkFBcUIsSUFFaEIsSUFBSSxJQUFTLEdBS0osS0FBVyxJQUFRK0YsUUFBUyxJQUFRQSxPQ3RCM0MsV0FDYixNQUFNMEIsRUFBUzFJLFNBQVNDLGNBQWMsbUJBQ3RDeUksRUFBT2UsWUFFUCxNQUFNQyxFQUFjMUosU0FBU0MsY0FBYyxnQkFDckMwSixFQUFXM0osU0FBU0MsY0FBYyxhQUV4Q3lKLEVBQVl6QixpQkFBaUIsU0FBUyxTQUt0QzBCLEVBQVMxQixpQkFBaUIsU0FBUyxLQUNqQ1MsRUFBT08sUUNaSSxTQUFpQ3hFLEVBQVF4QixFQUFXMkcsR0FDakUsTUFBTWpFLEVBQWEsQ0FDakIsQ0FBRXpDLEtBQU0sVUFBV2lELFNBQVUsR0FDN0IsQ0FBRWpELEtBQU0sYUFBY2lELFNBQVUsR0FDaEMsQ0FBRWpELEtBQU0sVUFBV2lELFNBQVUsR0FDN0IsQ0FBRWpELEtBQU0sWUFBYWlELFNBQVUsR0FDL0IsQ0FBRWpELEtBQU0sWUFBYWlELFNBQVUsSUFHakMsSUFBSTBELEVBQWUsS0FDbkIsU0FBU2xCLEVBQW1CbUIsR0FDMUJELEVBQWVDLENBQ2pCLENBQ0EsU0FBU3JCLElBQ1AsT0FBT29CLENBQ1QsQ0FDQSxNQUFNbkIsRUFBUzFJLFNBQVNDLGNBQWMsc0JBQ3RDeUksRUFBT2UsWUFDTXpKLFNBQVNDLGNBQWMsb0JBRS9CZ0ksaUJBQWlCLFVBQVUsS0FDOUIsTUFBTS9FLEVBQU9sRCxTQUFTK0osZUFBZSxjQUFjQyxNQUM3Q0MsRUFBWXhGLEVBQU92QixFQUFNRCxHQUNmLENBQ2QsTUFBTWlILEVBQVd4RSxFQUFrQkMsR0FDbkMrQyxFQUFPSCxVQUFZLEdBQ25CQyxFQUF1QnlCLEVBQVdDLEVBQVV2RSxFQUFZOEMsRUFBaUJDLEVBQVFDLEVBQ25GLElBRUosQ0RoQkl3QixDQUF3QjFGLEVBQVF4QixFQUFnQixHQUVwRCxDRWhCQW1ILEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL3NyYy9zdHlsZXMuY3NzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vc3JjL3N0eWxlcy9jZWxsLmNzcyIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL3NyYy9zdHlsZXMvZ2FtZUNyZWF0b3JEaWFsb2cuY3NzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vc3JjL3N0eWxlcy9nYW1lYm9hcmQuY3NzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qcyIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vd2ViYWNrLXRlbXBsYXRlLXJlcG8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vd2ViYWNrLXRlbXBsYXRlLXJlcG8vd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vd2ViYWNrLXRlbXBsYXRlLXJlcG8vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vd2ViYWNrLXRlbXBsYXRlLXJlcG8vd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vc3JjL21vZHVsZXMvR2FtZWJvYXJkLmpzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vc3JjL21vZHVsZXMvUGxheWVyLmpzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vc3JjL21vZHVsZXMvU2hpcC5qcyIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL3NyYy9tb2R1bGVzL0NvbXB1dGVyUGxheWVyLmpzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vc3JjL3N0eWxlcy9nYW1lYm9hcmQuY3NzPzIxODciLCJ3ZWJwYWNrOi8vd2ViYWNrLXRlbXBsYXRlLXJlcG8vLi9zcmMvaGVscGVyRnVuY3Rpb24vQ3JlYXRlSHRtbEVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vd2ViYWNrLXRlbXBsYXRlLXJlcG8vLi9zcmMvbW9kdWxlcy9SZW5kZXJJbmZvcm1hdGlvbi5qcyIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL3NyYy9zdHlsZXMvY2VsbC5jc3M/M2MwMyIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL3NyYy9oZWxwZXJGdW5jdGlvbi9nZW5lcmF0ZUljb24uanMiLCJ3ZWJwYWNrOi8vd2ViYWNrLXRlbXBsYXRlLXJlcG8vLi9zcmMvbW9kdWxlcy9SZW5kZXJDZWxsLmpzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vc3JjL21vZHVsZXMvQ29tcHV0ZXJBSS5qcyIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL3NyYy9tb2R1bGVzL1JlbmRlckdhbWVib2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL3NyYy9tb2R1bGVzL2dhbWVDcmVhdG9yL1JlbmRlckNyZWF0b3JHYW1lYm9hcmQuanMiLCJ3ZWJwYWNrOi8vd2ViYWNrLXRlbXBsYXRlLXJlcG8vLi9zcmMvbW9kdWxlcy9nYW1lQ3JlYXRvci9SZW5kZXJTaGlwVGFibGUuanMiLCJ3ZWJwYWNrOi8vd2ViYWNrLXRlbXBsYXRlLXJlcG8vLi9zcmMvc3R5bGVzL2dhbWVDcmVhdG9yRGlhbG9nLmNzcz84Zjk2Iiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vc3JjL3N0eWxlcy5jc3M/NDRiMiIsIndlYnBhY2s6Ly93ZWJhY2stdGVtcGxhdGUtcmVwby8uL3NyYy9tb2R1bGVzL2dhbWVDcmVhdG9yL1JlbmRlckdhbWVtb2RlRGlhbG9nLmpzIiwid2VicGFjazovL3dlYmFjay10ZW1wbGF0ZS1yZXBvLy4vc3JjL21vZHVsZXMvZ2FtZUNyZWF0b3IvUmVuZGVyR2FtZUNyZWF0b3JEaWFsb2cuanMiLCJ3ZWJwYWNrOi8vd2ViYWNrLXRlbXBsYXRlLXJlcG8vLi9zcmMvbWFpbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJvYm90bzppdGFsLHdnaHRAMCwxMDA7MCwzMDA7MCw0MDA7MCw1MDA7MCw3MDA7MCw5MDA7MSwxMDA7MSwzMDA7MSw0MDA7MSw1MDA7MSw3MDA7MSw5MDAmZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGA6cm9vdCB7XG4gIC0tcmVkOiAjZTUzOTM1O1xuICAtLWdyZWVuOiAjMDA4OTdiO1xuICAtLWJsdWU6ICMwMzliZTU7XG4gIC0tcHVycGxlOiAjMzk0OWFiO1xuICAtLW1hdXZlOiAjOGUyNGFhO1xuICAtLWdhbWVib2FyZEJhY2tncm91bmQ6ICM4MGYxZmY7XG4gIC0tZ3JheTogI2Y4ZjlmYTtcbiAgLS1kYXJrZ3JheTogI2M3YzljYztcbiAgLS1wcmltYXJ5OiAjMThiYzljO1xuICAtLWNvbnRyYXN0OiAjMmMzZTUwO1xufVxuXG5ib2R5IHtcbiAgaGVpZ2h0OiAxMDBkdmg7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgZm9udC1mYW1pbHk6IFwicm9ib3RvXCI7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogNTBweDtcbn1cbmhlYWRlciB7XG4gIGhlaWdodDogMTAlO1xuICBwYWRkaW5nOiAxNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb250cmFzdCk7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAzcmVtO1xufVxuZm9vdGVyIHtcbiAgaGVpZ2h0OiA1JTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2M3YzljYztcbiAgcGFkZGluZzogMTBweDtcbiAgY29sb3I6IHZhcigtLWNvbnRyYXN0KTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxubWFpbiB7XG4gIGhlaWdodDogODUlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuLmdhbWVib2FyZFdyYXBwZXIge1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWV2ZW5seTtcbn1cbmJ1dHRvbiB7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIHdpZHRoOiAxMDBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBib3JkZXI6IDFweCBzb2xpZDtcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xuICBmb250LXNpemU6IDEuMnJlbTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeSk7XG4gIGNvbG9yOiB3aGl0ZTtcbn1cbmJ1dHRvbjpob3ZlciB7XG4gIGZpbHRlcjogYnJpZ2h0bmVzcygwLjkpO1xuICBzY2FsZTogMS4xO1xufVxuaW5wdXQge1xuICBoZWlnaHQ6IDMwcHg7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbnRyYXN0KTtcbn1cbmRpYWxvZyB7XG4gIHBhZGRpbmc6IDUwcHg7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgZm9udC1zaXplOiAxLjJyZW07XG4gIGNvbG9yOiB2YXIoLS1jb250cmFzdCk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgYm9yZGVyOiBub25lO1xuICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMzUpIDBweCA1cHggMTVweDtcbn1cbndyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjBweDtcbiAgZ2FwOiAyNXB4O1xufVxuXG4jY3JlYXRvckJ0bldyYXBwZXIge1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMTAwcHgpIHtcbiAgLmdhbWVib2FyZFdyYXBwZXIge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIGdhcDogMTAwcHg7XG4gIH1cbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQ0E7RUFDRSxjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLDhCQUE4QjtFQUM5QixlQUFlO0VBQ2YsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsU0FBUztFQUNULFVBQVU7RUFDVixxQkFBcUI7RUFDckIsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixTQUFTO0FBQ1g7QUFDQTtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsaUNBQWlDO0VBQ2pDLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjtBQUNBO0VBQ0UsVUFBVTtFQUNWLHlCQUF5QjtFQUN6QixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2Isc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsYUFBYTtFQUNiLHFCQUFxQjtFQUNyQiw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLGFBQWE7RUFDYixZQUFZO0VBQ1osZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGdCQUFnQjtFQUNoQixnQ0FBZ0M7RUFDaEMsWUFBWTtBQUNkO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsVUFBVTtBQUNaO0FBQ0E7RUFDRSxZQUFZO0VBQ1osYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsaUNBQWlDO0FBQ25DO0FBQ0E7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGlCQUFpQjtFQUNqQixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLFlBQVk7RUFDWiw0Q0FBNEM7QUFDOUM7QUFDQTtFQUNFLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGdCQUFnQjtFQUNoQixTQUFTO0FBQ1g7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEI7QUFDQTtFQUNFO0lBQ0Usc0JBQXNCO0lBQ3RCLGVBQWU7SUFDZixVQUFVO0VBQ1o7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCJAaW1wb3J0IHVybChcXFwiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86aXRhbCx3Z2h0QDAsMTAwOzAsMzAwOzAsNDAwOzAsNTAwOzAsNzAwOzAsOTAwOzEsMTAwOzEsMzAwOzEsNDAwOzEsNTAwOzEsNzAwOzEsOTAwJmRpc3BsYXk9c3dhcFxcXCIpO1xcbjpyb290IHtcXG4gIC0tcmVkOiAjZTUzOTM1O1xcbiAgLS1ncmVlbjogIzAwODk3YjtcXG4gIC0tYmx1ZTogIzAzOWJlNTtcXG4gIC0tcHVycGxlOiAjMzk0OWFiO1xcbiAgLS1tYXV2ZTogIzhlMjRhYTtcXG4gIC0tZ2FtZWJvYXJkQmFja2dyb3VuZDogIzgwZjFmZjtcXG4gIC0tZ3JheTogI2Y4ZjlmYTtcXG4gIC0tZGFya2dyYXk6ICNjN2M5Y2M7XFxuICAtLXByaW1hcnk6ICMxOGJjOWM7XFxuICAtLWNvbnRyYXN0OiAjMmMzZTUwO1xcbn1cXG5cXG5ib2R5IHtcXG4gIGhlaWdodDogMTAwZHZoO1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIGZvbnQtZmFtaWx5OiBcXFwicm9ib3RvXFxcIjtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZ2FwOiA1MHB4O1xcbn1cXG5oZWFkZXIge1xcbiAgaGVpZ2h0OiAxMCU7XFxuICBwYWRkaW5nOiAxNXB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY29udHJhc3QpO1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgZm9udC13ZWlnaHQ6IDUwMDtcXG4gIGZvbnQtc2l6ZTogM3JlbTtcXG59XFxuZm9vdGVyIHtcXG4gIGhlaWdodDogNSU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjYzdjOWNjO1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGNvbG9yOiB2YXIoLS1jb250cmFzdCk7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcbm1haW4ge1xcbiAgaGVpZ2h0OiA4NSU7XFxuICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcbi5nYW1lYm9hcmRXcmFwcGVyIHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xcbn1cXG5idXR0b24ge1xcbiAgcGFkZGluZzogMTBweDtcXG4gIHdpZHRoOiAxMDBweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJvcmRlcjogMXB4IHNvbGlkO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgZm9udC1zaXplOiAxLjJyZW07XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeSk7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcbmJ1dHRvbjpob3ZlciB7XFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoMC45KTtcXG4gIHNjYWxlOiAxLjE7XFxufVxcbmlucHV0IHtcXG4gIGhlaWdodDogMzBweDtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBmb250LXNpemU6IDEuMnJlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLWNvbnRyYXN0KTtcXG59XFxuZGlhbG9nIHtcXG4gIHBhZGRpbmc6IDUwcHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBmb250LXNpemU6IDEuMnJlbTtcXG4gIGNvbG9yOiB2YXIoLS1jb250cmFzdCk7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBib3JkZXI6IG5vbmU7XFxuICBib3gtc2hhZG93OiByZ2JhKDAsIDAsIDAsIDAuMzUpIDBweCA1cHggMTVweDtcXG59XFxud3JhcHBlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgbWFyZ2luLXRvcDogMjBweDtcXG4gIGdhcDogMjVweDtcXG59XFxuXFxuI2NyZWF0b3JCdG5XcmFwcGVyIHtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxufVxcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTEwMHB4KSB7XFxuICAuZ2FtZWJvYXJkV3JhcHBlciB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGZsZXgtd3JhcDogd3JhcDtcXG4gICAgZ2FwOiAxMDBweDtcXG4gIH1cXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGAuc2hpcCB7XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgY29sb3I6IHdoaXRlO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb250cmFzdCk7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5jYXJyaWVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcmVkKTtcbn1cbi5iYXR0bGVzaGlwIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ3JlZW4pO1xufVxuLnN1Ym1hcmluZSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWJsdWUpO1xufVxuLmNydWlzZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wdXJwbGUpO1xufVxuLmRlc3Ryb3llciB7XG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLW1hdXZlKTtcbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9jZWxsLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osWUFBWTtFQUNaLGlDQUFpQztFQUNqQyxrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLDRCQUE0QjtBQUM5QjtBQUNBO0VBQ0UsOEJBQThCO0FBQ2hDO0FBQ0E7RUFDRSw2QkFBNkI7QUFDL0I7QUFDQTtFQUNFLCtCQUErQjtBQUNqQztBQUNBO0VBQ0UsOEJBQThCO0FBQ2hDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5zaGlwIHtcXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XFxuICBib3JkZXI6IG5vbmU7XFxuICBjb2xvcjogd2hpdGU7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jb250cmFzdCk7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcbi5jYXJyaWVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXJlZCk7XFxufVxcbi5iYXR0bGVzaGlwIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWdyZWVuKTtcXG59XFxuLnN1Ym1hcmluZSB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ibHVlKTtcXG59XFxuLmNydWlzZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHVycGxlKTtcXG59XFxuLmRlc3Ryb3llciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1tYXV2ZSk7XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBgI2dhbWVDcmVhdG9yV3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogMzBweDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi5zaGlwV3JhcHBlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdhcDogNXB4O1xuICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1jb250cmFzdCk7XG4gIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgcGFkZGluZzogMTBweDtcbiAgd2lkdGg6IDEyMHB4O1xufVxuXG4jc2hpcFRhYmxlIHtcbiAganVzdGlmeS1zZWxmOiBjZW50ZXI7XG4gIHdpZHRoOiA1MCU7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBnYXA6IDEwcHg7XG59XG4uc2hpcEVsZW1lbnQge1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGNvbG9yOiB2YXIoLS1jb250cmFzdCk7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG59XG4uc2hpcEVsZW1lbnQ6aG92ZXIge1xuICBmaWx0ZXI6IGJyaWdodG5lc3MoMS41KTtcbiAgc2NhbGU6IDEuMTtcbn1cbiNjYXJyaWVyV3JhcHBlcjpob3ZlciB7XG4gIGNvbG9yOiB2YXIoLS1yZWQpO1xufVxuI2JhdHRsZXNoaXBXcmFwcGVyOmhvdmVyIHtcbiAgY29sb3I6IHZhcigtLWdyZWVuKTtcbn1cbiNzdWJtYXJpbmVXcmFwcGVyOmhvdmVyIHtcbiAgY29sb3I6IHZhcigtLWJsdWUpO1xufVxuI2NydWlzZXJXcmFwcGVyOmhvdmVyIHtcbiAgY29sb3I6IHZhcigtLXB1cnBsZSk7XG59XG4jZGVzdHJveWVyV3JhcHBlcjpob3ZlciB7XG4gIGNvbG9yOiB2YXIoLS1tYXV2ZSk7XG59XG4jY3JlYXRpb25HYW1lYm9hcmRXcmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgZ2FwOiAxNXB4O1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL2dhbWVDcmVhdG9yRGlhbG9nLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsU0FBUztFQUNULG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsYUFBYTtFQUNiLFFBQVE7RUFDUixpQ0FBaUM7RUFDakMsa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxvQkFBb0I7RUFDcEIsVUFBVTtFQUNWLGFBQWE7RUFDYixlQUFlO0VBQ2YsOEJBQThCO0VBQzlCLFNBQVM7QUFDWDtBQUNBO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixzQkFBc0I7RUFDdEIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSx1QkFBdUI7RUFDdkIsVUFBVTtBQUNaO0FBQ0E7RUFDRSxpQkFBaUI7QUFDbkI7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxvQkFBb0I7QUFDdEI7QUFDQTtFQUNFLG1CQUFtQjtBQUNyQjtBQUNBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixTQUFTO0FBQ1hcIixcInNvdXJjZXNDb250ZW50XCI6W1wiI2dhbWVDcmVhdG9yV3JhcHBlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGdhcDogMzBweDtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcbi5zaGlwV3JhcHBlciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZ2FwOiA1cHg7XFxuICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1jb250cmFzdCk7XFxuICBib3JkZXItcmFkaXVzOiA0cHg7XFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgd2lkdGg6IDEyMHB4O1xcbn1cXG5cXG4jc2hpcFRhYmxlIHtcXG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xcbiAgd2lkdGg6IDUwJTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LXdyYXA6IHdyYXA7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICBnYXA6IDEwcHg7XFxufVxcbi5zaGlwRWxlbWVudCB7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgY29sb3I6IHZhcigtLWNvbnRyYXN0KTtcXG4gIGJhY2tncm91bmQ6IG5vbmU7XFxufVxcbi5zaGlwRWxlbWVudDpob3ZlciB7XFxuICBmaWx0ZXI6IGJyaWdodG5lc3MoMS41KTtcXG4gIHNjYWxlOiAxLjE7XFxufVxcbiNjYXJyaWVyV3JhcHBlcjpob3ZlciB7XFxuICBjb2xvcjogdmFyKC0tcmVkKTtcXG59XFxuI2JhdHRsZXNoaXBXcmFwcGVyOmhvdmVyIHtcXG4gIGNvbG9yOiB2YXIoLS1ncmVlbik7XFxufVxcbiNzdWJtYXJpbmVXcmFwcGVyOmhvdmVyIHtcXG4gIGNvbG9yOiB2YXIoLS1ibHVlKTtcXG59XFxuI2NydWlzZXJXcmFwcGVyOmhvdmVyIHtcXG4gIGNvbG9yOiB2YXIoLS1wdXJwbGUpO1xcbn1cXG4jZGVzdHJveWVyV3JhcHBlcjpob3ZlciB7XFxuICBjb2xvcjogdmFyKC0tbWF1dmUpO1xcbn1cXG4jY3JlYXRpb25HYW1lYm9hcmRXcmFwcGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgZ2FwOiAxNXB4O1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYC5nYW1lYm9hZENvbnRhaW5lciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4tcmV2ZXJzZTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZ2FwOiAxNXB4O1xufVxuLmdhbWVCb2FyZCB7XG4gIGhlaWdodDogNTAwcHg7XG4gIHdpZHRoOiA1MDBweDtcbiAgcGFkZGluZzogNXB4O1xuICBib3JkZXItcmFkaXVzOiAycHg7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCgxMCwgMWZyKTtcbiAgZ2FwOiA1cHg7XG4gIGJveC1zaGFkb3c6XG4gICAgcmdiYSgwLCAwLCAwLCAwLjE2KSAwcHggMTBweCAzNnB4IDBweCxcbiAgICByZ2JhKDAsIDAsIDAsIDAuMDYpIDBweCAwcHggMHB4IDFweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ2FtZWJvYXJkQmFja2dyb3VuZCk7XG59XG4uZ2FtZWJvYXJkVGl0bGUge1xuICBmb250LXNpemU6IDJyZW07XG59XG4uaW5mb3JtYXRpb24ge1xuICBmb250LXNpemU6IDEuNnJlbTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xufVxuLmNlbGwge1xuICBkaXNwbGF5OiBncmlkO1xuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBmb250LXdlaWdodDogNjAwO1xufVxuLmNlbGw6aG92ZXIge1xuICBjdXJzb3I6IGNyb3NzaGFpcjtcbiAgc2NhbGU6IDEuMTtcbn1cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbiAgLmdhbWVCb2FyZCB7XG4gICAgaGVpZ2h0OiAzMDBweDtcbiAgICB3aWR0aDogMzAwcHg7XG4gIH1cbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlcy9nYW1lYm9hcmQuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBYTtFQUNiLDhCQUE4QjtFQUM5QixtQkFBbUI7RUFDbkIsU0FBUztBQUNYO0FBQ0E7RUFDRSxhQUFhO0VBQ2IsWUFBWTtFQUNaLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLHNDQUFzQztFQUN0QyxtQ0FBbUM7RUFDbkMsUUFBUTtFQUNSOzt1Q0FFcUM7RUFDckMsNENBQTRDO0FBQzlDO0FBQ0E7RUFDRSxlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjtBQUNBO0VBQ0UsYUFBYTtFQUNiLHFCQUFxQjtFQUNyQixrQkFBa0I7RUFDbEIscUNBQXFDO0VBQ3JDLGtCQUFrQjtFQUNsQixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLGlCQUFpQjtFQUNqQixVQUFVO0FBQ1o7QUFDQTtFQUNFO0lBQ0UsYUFBYTtJQUNiLFlBQVk7RUFDZDtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIi5nYW1lYm9hZENvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbi1yZXZlcnNlO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIGdhcDogMTVweDtcXG59XFxuLmdhbWVCb2FyZCB7XFxuICBoZWlnaHQ6IDUwMHB4O1xcbiAgd2lkdGg6IDUwMHB4O1xcbiAgcGFkZGluZzogNXB4O1xcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xcbiAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiByZXBlYXQoMTAsIDFmcik7XFxuICBnYXA6IDVweDtcXG4gIGJveC1zaGFkb3c6XFxuICAgIHJnYmEoMCwgMCwgMCwgMC4xNikgMHB4IDEwcHggMzZweCAwcHgsXFxuICAgIHJnYmEoMCwgMCwgMCwgMC4wNikgMHB4IDBweCAwcHggMXB4O1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tZ2FtZWJvYXJkQmFja2dyb3VuZCk7XFxufVxcbi5nYW1lYm9hcmRUaXRsZSB7XFxuICBmb250LXNpemU6IDJyZW07XFxufVxcbi5pbmZvcm1hdGlvbiB7XFxuICBmb250LXNpemU6IDEuNnJlbTtcXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxufVxcbi5jZWxsIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxuICBib3JkZXItcmFkaXVzOiAycHg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuMTUpO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgZm9udC13ZWlnaHQ6IDYwMDtcXG59XFxuLmNlbGw6aG92ZXIge1xcbiAgY3Vyc29yOiBjcm9zc2hhaXI7XFxuICBzY2FsZTogMS4xO1xcbn1cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDYwMHB4KSB7XFxuICAuZ2FtZUJvYXJkIHtcXG4gICAgaGVpZ2h0OiAzMDBweDtcXG4gICAgd2lkdGg6IDMwMHB4O1xcbiAgfVxcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEdhbWVib2FyZChuYW1lKSB7XG4gIGNvbnN0IGdhbWVCb2FyZCA9IFtdO1xuICBjb25zdCByZWNlaXZlZENvb3JkaW5hdGVzID0gW107XG4gIGNvbnN0IHBsYWNlZFNoaXBzID0gW107XG4gIGZvciAobGV0IHkgPSAwOyB5IDwgMTA7IHkgKz0gMSkge1xuICAgIGdhbWVCb2FyZC5wdXNoKG5ldyBBcnJheSgxMCkuZmlsbChudWxsKSk7XG4gIH1cbiAgY29uc3QgZ2V0TmFtZSA9ICgpID0+IG5hbWUudG9TdHJpbmcoKTtcbiAgY29uc3QgZ2V0R2FtZWJvYXJkQXJyYXkgPSAoKSA9PiBnYW1lQm9hcmQ7XG5cbiAgZnVuY3Rpb24gcGxhY2VTaGlwKHNoaXAsIHksIHgsIGF4aXMgPSBcImhvcml6b250YWxcIikge1xuICAgIGlmICh5IDwgMCB8fCB5ID4gMTAgfHwgeCA8IDAgfHwgeCA+IDEwKSByZXR1cm4gZmFsc2U7XG5cbiAgICBpZiAoYXhpcyA9PT0gXCJ2ZXJ0aWNhbFwiKSB7XG4gICAgICBjb25zdCBpc091dE9mQm91bmRWZXJ0aWNhbCA9IHkgKyBzaGlwLmdldExlbmd0aCgpID4gZ2FtZUJvYXJkLmxlbmd0aDtcbiAgICAgIGlmIChpc091dE9mQm91bmRWZXJ0aWNhbCkgcmV0dXJuIGZhbHNlO1xuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXAuZ2V0TGVuZ3RoKCk7IGkgKz0gMSkge1xuICAgICAgICBjb25zdCBpc0NlbGxPY2N1cGllZCA9IGdhbWVCb2FyZFt5ICsgaV1beF0gIT09IG51bGw7XG4gICAgICAgIGlmIChpc0NlbGxPY2N1cGllZCkgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXAuZ2V0TGVuZ3RoKCk7IGkgKz0gMSkge1xuICAgICAgICBnYW1lQm9hcmRbeSArIGldLnNwbGljZSh4LCAxLCBzaGlwKTtcbiAgICAgICAgcGxhY2VkU2hpcHMucHVzaChzaGlwKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuICAgIGNvbnN0IGlzT3V0T2ZCb3VuZEhvcml6b250YWwgPSB4ICsgc2hpcC5nZXRMZW5ndGgoKSA+IGdhbWVCb2FyZFt5XS5sZW5ndGg7XG4gICAgaWYgKGlzT3V0T2ZCb3VuZEhvcml6b250YWwpIHJldHVybiBmYWxzZTtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcC5nZXRMZW5ndGgoKTsgaSArPSAxKSB7XG4gICAgICBjb25zdCBpc0NlbGxPY2N1cGllZCA9IGdhbWVCb2FyZFt5XVt4ICsgaV0gIT09IG51bGw7XG4gICAgICBpZiAoaXNDZWxsT2NjdXBpZWQpIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHNoaXAuZ2V0TGVuZ3RoKCk7IGkgKz0gMSkge1xuICAgICAgZ2FtZUJvYXJkW3ldLnNwbGljZSh4ICsgaSwgMSwgc2hpcCk7XG4gICAgICBwbGFjZWRTaGlwcy5wdXNoKHNoaXApO1xuICAgIH1cbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxuXG4gIGZ1bmN0aW9uIHJlY2VpdmVBdHRhY2soeSwgeCkge1xuICAgIGlmICh5IDwgMCB8fCB5ID4gMTAgfHwgeCA8IDAgfHwgeCA+IDEwKSByZXR1cm4gZmFsc2U7XG5cbiAgICBjb25zdCBjZWxsID0gZ2FtZUJvYXJkW3ldW3hdO1xuXG4gICAgaWYgKHJlY2VpdmVkQ29vcmRpbmF0ZXMuc29tZSgoY29vcmRpbmF0ZXMpID0+IGNvb3JkaW5hdGVzLnkgPT09IHkgJiYgY29vcmRpbmF0ZXMueCA9PT0geCkpIHJldHVybiBmYWxzZTsgLy8gY2hlY2sgaWYgY29vcmRpbmF0ZXMgZXhpc3QgaW4gYXJyYXlcblxuICAgIGlmIChjZWxsID09PSBcIm1pc3NlZFwiKSByZXR1cm4gZmFsc2U7XG5cbiAgICByZWNlaXZlZENvb3JkaW5hdGVzLnB1c2goeyB5LCB4IH0pO1xuXG4gICAgaWYgKGNlbGwgPT09IG51bGwpIHtcbiAgICAgIGdhbWVCb2FyZFt5XS5zcGxpY2UoeCwgMSwgXCJtaXNzZWRcIik7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBjZWxsLmhpdCgpO1xuICAgIGdhbWVCb2FyZFt5XS5zcGxpY2UoeCwgMSwgeyBpc0hpdDogdHJ1ZSwgc2hpcDogY2VsbCB9KTtcblxuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgZnVuY3Rpb24gYXJlQWxsU3VuaygpIHtcbiAgICByZXR1cm4gcGxhY2VkU2hpcHMuZXZlcnkoKHNoaXApID0+IHNoaXAuaXNTdW5rKCkgPT09IHRydWUpO1xuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBnZXRHYW1lYm9hcmRBcnJheSxcbiAgICBnZXROYW1lLFxuICAgIHBsYWNlU2hpcCxcbiAgICByZWNlaXZlQXR0YWNrLFxuICAgIGFyZUFsbFN1bmssXG4gIH07XG59XG4iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBQbGF5ZXIobmFtZSwgbmV3R2FtZWJvYXJkLCB0dXJuID0gdHJ1ZSwgbmF0dXJlID0gXCJodW1hblwiKSB7XG4gIGNvbnN0IHBsYXllckdhbWVib2FyZCA9IG5ld0dhbWVib2FyZChuYW1lKTtcbiAgbGV0IGlzVHVybiA9IHR1cm47XG5cbiAgY29uc3QgZ2V0VHVybiA9ICgpID0+IGlzVHVybjtcbiAgY29uc3QgZ2V0TmFtZSA9ICgpID0+IG5hbWU7XG4gIGNvbnN0IGdldE5hdHVyZSA9ICgpID0+IG5hdHVyZTtcbiAgY29uc3QgZ2V0R2FtZWJvYXJkID0gKCkgPT4gcGxheWVyR2FtZWJvYXJkO1xuICBjb25zdCB0b2dnbGVUdXJuID0gKCkgPT4ge1xuICAgIGlzVHVybiA9ICFpc1R1cm47XG4gICAgcmV0dXJuIGlzVHVybjtcbiAgfTtcblxuICBjb25zdCBhdHRhY2sgPSAoZW5lbXlQbGF5ZXIsIHksIHgpID0+IGVuZW15UGxheWVyLmdldEdhbWVib2FyZCgpLnJlY2VpdmVBdHRhY2soeSwgeCk7XG4gIGNvbnN0IGhhc1dvbiA9IChlbmVteVBsYXllcikgPT4gZW5lbXlQbGF5ZXIuZ2V0R2FtZWJvYXJkKCkuYXJlQWxsU3VuaygpO1xuICByZXR1cm4ge1xuICAgIGdldE5hbWUsXG4gICAgZ2V0TmF0dXJlLFxuICAgIGdldEdhbWVib2FyZCxcbiAgICBnZXRUdXJuLFxuICAgIHRvZ2dsZVR1cm4sXG4gICAgYXR0YWNrLFxuICAgIGhhc1dvbixcbiAgfTtcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFNoaXAobmFtZSkge1xuICBjb25zdCBhbGxvd2VkTmFtZXMgPSBbXCJDYXJyaWVyXCIsIFwiQmF0dGxlc2hpcFwiLCBcIkNydWlzZXJcIiwgXCJTdWJtYXJpbmVcIiwgXCJEZXN0cm95ZXJcIl07XG4gIGlmICghYWxsb3dlZE5hbWVzLmluY2x1ZGVzKG5hbWUpKSB0aHJvdyBuZXcgRXJyb3IoXCJOYW1lIGlzbid0IHZhbGlkXCIpO1xuXG4gIGZ1bmN0aW9uIHNldFNoaXBMZW5ndGgoKSB7XG4gICAgaWYgKG5hbWUgPT09IFwiQ2FycmllclwiKSByZXR1cm4gNTtcbiAgICBpZiAobmFtZSA9PT0gXCJCYXR0bGVzaGlwXCIpIHJldHVybiA0O1xuICAgIGlmIChuYW1lID09PSBcIkNydWlzZXJcIikgcmV0dXJuIDM7XG4gICAgaWYgKG5hbWUgPT09IFwiU3VibWFyaW5lXCIpIHJldHVybiAzO1xuICAgIGlmIChuYW1lID09PSBcIkRlc3Ryb3llclwiKSByZXR1cm4gMjtcbiAgICByZXR1cm4gbnVsbDtcbiAgfVxuICBjb25zdCBsZW5ndGggPSBzZXRTaGlwTGVuZ3RoKCk7XG4gIGxldCBoaXRQb2ludHMgPSBsZW5ndGg7XG5cbiAgY29uc3QgZ2V0TmFtZSA9ICgpID0+IG5hbWU7XG4gIGNvbnN0IGdldExlbmd0aCA9ICgpID0+IGxlbmd0aDtcbiAgY29uc3QgZ2V0SGl0UG9pbnRzID0gKCkgPT4gaGl0UG9pbnRzO1xuICBmdW5jdGlvbiBoaXQoKSB7XG4gICAgaWYgKGhpdFBvaW50cyA9PT0gMCkgdGhyb3cgbmV3IEVycm9yKFwiU2hpcCBpcyBhbHJlYWR5IGF0IDAgaGl0cG9pbnRzXCIpO1xuICAgIGhpdFBvaW50cyAtPSAxO1xuICB9XG4gIGNvbnN0IGlzU3VuayA9ICgpID0+IGhpdFBvaW50cyA9PT0gMDtcbiAgcmV0dXJuIHtcbiAgICBnZXROYW1lLFxuICAgIGdldExlbmd0aCxcbiAgICBnZXRIaXRQb2ludHMsXG4gICAgaGl0LFxuICAgIGlzU3VuayxcbiAgfTtcbn1cbiIsImltcG9ydCBHYW1lYm9hcmQgZnJvbSBcIi4vR2FtZWJvYXJkXCI7XG5pbXBvcnQgUGxheWVyIGZyb20gXCIuL1BsYXllclwiO1xuaW1wb3J0IFNoaXAgZnJvbSBcIi4vU2hpcFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRDb21wdXRlclBsYXllcihzaGlwc0FycmF5KSB7XG4gIGNvbnN0IGNvbXB1dGVyUGxheWVyID0gUGxheWVyKFwiY29tcHV0ZXJcIiwgR2FtZWJvYXJkLCBmYWxzZSwgXCJjb21wdXRlclwiKTtcblxuICBmdW5jdGlvbiBnZXRSYW5kb21OdW1iZXIoKSB7XG4gICAgcmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwKTtcbiAgfVxuXG4gIC8vIHVzZSBhIGxvb3AgdGhhdCBrZWVwcyBwbGFjaW5nIHNoaXBzIHJhbmRvbWx5IHdoaWxlIHNoaXAgcGxhY2VtZW50IGlzIGxlZ2FsIGZvciBldmVyeSBzaGlwXG4gIGZ1bmN0aW9uIHBsYWNlQ29tcHV0ZXJTaGlwcygpIHtcbiAgICBmdW5jdGlvbiBwbGFjZShuYW1lKSB7XG4gICAgICBpZiAoIWNvbXB1dGVyUGxheWVyLmdldEdhbWVib2FyZCgpLnBsYWNlU2hpcChTaGlwKG5hbWUpLCBnZXRSYW5kb21OdW1iZXIoKSwgZ2V0UmFuZG9tTnVtYmVyKCkpKVxuICAgICAgICBwbGFjZShuYW1lKTtcbiAgICB9XG5cbiAgICBzaGlwc0FycmF5LmZvckVhY2goKHNoaXApID0+IHtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc2hpcC5xdWFudGl0eTsgaSArPSAxKSB7XG4gICAgICAgIHBsYWNlKHNoaXAubmFtZSk7XG4gICAgICB9XG4gICAgICAvLyBsb29wIHF1YW50aXR5IGFtbW91bnQgb2YgdGltZVxuICAgIH0pO1xuICB9XG5cbiAgcGxhY2VDb21wdXRlclNoaXBzKCk7XG4gIHJldHVybiBjb21wdXRlclBsYXllcjtcbn1cbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9nYW1lYm9hcmQuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9nYW1lYm9hcmQuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY3JlYXRlSHRtbEVsZW1lbnQodGFnTmFtZSwgYXR0cmlidXRlc0FycmF5KSB7XG4gIGNvbnN0IGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZ05hbWUpO1xuXG4gIGlmIChhdHRyaWJ1dGVzQXJyYXkpIHtcbiAgICBjb25zdCBhdHRyaWJ1dGVBcnJheSA9IE9iamVjdC5rZXlzKGF0dHJpYnV0ZXNBcnJheSk7XG4gICAgYXR0cmlidXRlQXJyYXkuZm9yRWFjaCgoZGF0YSkgPT4ge1xuICAgICAgZWxlbWVudC5zZXRBdHRyaWJ1dGUoZGF0YSwgYXR0cmlidXRlc0FycmF5W2RhdGFdKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBlbGVtZW50O1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVuZGVySW5mb3JtYXRpb24odHlwZSwgcGxheWVyT25lLCBwbGF5ZXJUd28pIHtcbiAgY29uc3QgbWFpbkluZm9ybWF0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5tYWluXCIpO1xuICBjb25zdCBkZXNjSW5mb3JtYXRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRlc2NyaXB0aW9uXCIpO1xuXG4gIGlmICh0eXBlID09PSBcInR1cm5cIikgbWFpbkluZm9ybWF0aW9uLnRleHRDb250ZW50ID0gYEl0IGlzICR7cGxheWVyT25lLmdldE5hbWUoKX0ncyBUdXJuYDtcbiAgaWYgKHR5cGUgPT09IFwid2luXCIpIHtcbiAgICBtYWluSW5mb3JtYXRpb24udGV4dENvbnRlbnQgPSBgJHtwbGF5ZXJPbmUuZ2V0TmFtZSgpfSBsb3N0IGFsbCB0aGVpciBzaGlwcyFgO1xuICAgIGRlc2NJbmZvcm1hdGlvbi50ZXh0Q29udGVudCA9IGAke3BsYXllclR3by5nZXROYW1lKCl9IEhhcyBXb24hYDtcbiAgfVxufVxuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2NlbGwuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9jZWxsLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBjcmVhdGVIdG1sRWxlbWVudCBmcm9tIFwiLi9DcmVhdGVIdG1sRWxlbWVudFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBHZW5lcmF0ZUljb24oKSB7XG4gIGNvbnN0IGRlc3Ryb3llZCA9IGNyZWF0ZUh0bWxFbGVtZW50KFwic3BhblwiLCB7IGNsYXNzOiBcIm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWRcIiB9KTtcbiAgZGVzdHJveWVkLnRleHRDb250ZW50ID0gXCJza3VsbFwiO1xuXG4gIGNvbnN0IGZpcmUgPSBjcmVhdGVIdG1sRWxlbWVudChcInNwYW5cIiwgeyBjbGFzczogXCJtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkXCIgfSk7XG4gIGZpcmUudGV4dENvbnRlbnQgPSBcImxvY2FsX2ZpcmVfZGVwYXJ0bWVudFwiO1xuXG4gIGNvbnN0IG1pc3NlZCA9IGNyZWF0ZUh0bWxFbGVtZW50KFwic3BhblwiLCB7IGNsYXNzOiBcIm1hdGVyaWFsLXN5bWJvbHMtb3V0bGluZWRcIiB9KTtcbiAgbWlzc2VkLnRleHRDb250ZW50ID0gXCJjbG9zZVwiO1xuICByZXR1cm4geyBkZXN0cm95ZWQsIGZpcmUsIG1pc3NlZCB9O1xufVxuIiwiaW1wb3J0IGNyZWF0ZUh0bWxFbGVtZW50IGZyb20gXCIuLi9oZWxwZXJGdW5jdGlvbi9DcmVhdGVIdG1sRWxlbWVudFwiO1xuaW1wb3J0IGNvbXB1dGVyQUkgZnJvbSBcIi4vQ29tcHV0ZXJBSVwiO1xuaW1wb3J0IHJlbmRlckluZm9ybWF0aW9uIGZyb20gXCIuL1JlbmRlckluZm9ybWF0aW9uXCI7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnNcbmltcG9ydCBzdHlsZSBmcm9tIFwiLi4vc3R5bGVzL2NlbGwuY3NzXCI7XG5pbXBvcnQgR2VuZXJhdGVJY29uIGZyb20gXCIuLi9oZWxwZXJGdW5jdGlvbi9nZW5lcmF0ZUljb25cIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVuZGVyQ2VsbChnYW1lQm9hcmRBcnJheSwgaSwgaiwgcGxheWVyLCBlbmVteSwgcmVuZGVyR2FtZWJvYXJkKSB7XG4gIGNvbnN0IGNlbGwgPSBjcmVhdGVIdG1sRWxlbWVudChcImRpdlwiLCB7IGlkOiBgJHtpfSwke2p9YCwgY2xhc3M6IFwiY2VsbFwiIH0pO1xuXG4gIGZ1bmN0aW9uIGlzR2FtZUZpbmlzaGVkKCkge1xuICAgIHJldHVybiBwbGF5ZXIuZ2V0R2FtZWJvYXJkKCkuYXJlQWxsU3VuaygpIHx8IGVuZW15LmdldEdhbWVib2FyZCgpLmFyZUFsbFN1bmsoKTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVR1cm5JbmZvcm1hdGlvbigpIHtcbiAgICByZW5kZXJJbmZvcm1hdGlvbihcInR1cm5cIiwgcGxheWVyLCBlbmVteSk7XG5cbiAgICBpZiAocGxheWVyLmdldEdhbWVib2FyZCgpLmFyZUFsbFN1bmsoKSkgcmVuZGVySW5mb3JtYXRpb24oXCJ3aW5cIiwgcGxheWVyLCBlbmVteSk7XG4gICAgaWYgKGVuZW15LmdldEdhbWVib2FyZCgpLmFyZUFsbFN1bmsoKSkgcmVuZGVySW5mb3JtYXRpb24oXCJ3aW5cIiwgZW5lbXksIHBsYXllcik7XG4gIH1cblxuICBmdW5jdGlvbiBwbGF5Q29tcHV0ZXJUdXJuKCkge1xuICAgIC8vIGlmIGl0IGlzIHRoZSBjb21wdXRlcidzIGdhbWVib2FyZFxuICAgIGVuZW15LnRvZ2dsZVR1cm4oKTsgLy8gc2V0IG9mZiB0aGUgdHVybiBvZiB0aGUgZW5lbXkgKGh1bWFuIHBsYXllcilcblxuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgY29tcHV0ZXJBSSgpLmNvbXB1dGVyQXR0YWNrKHBsYXllciwgZW5lbXkpO1xuICAgICAgcmVuZGVyR2FtZWJvYXJkKGVuZW15LCBwbGF5ZXIpO1xuICAgICAgcmVuZGVySW5mb3JtYXRpb24oXCJ0dXJuXCIsIGVuZW15LCBwbGF5ZXIpO1xuICAgICAgZW5lbXkudG9nZ2xlVHVybigpOyAvLyBzZXQgaXQgYmFjayBvbiBhZnRlciB0aGUgY29tcHV0ZXIgZmluaXNoZWQgaXQncyBwbGF5XG5cbiAgICAgIGlmIChwbGF5ZXIuZ2V0R2FtZWJvYXJkKCkuYXJlQWxsU3VuaygpKSByZW5kZXJJbmZvcm1hdGlvbihcIndpblwiLCBwbGF5ZXIsIGVuZW15KTtcbiAgICAgIGlmIChlbmVteS5nZXRHYW1lYm9hcmQoKS5hcmVBbGxTdW5rKCkpIHJlbmRlckluZm9ybWF0aW9uKFwid2luXCIsIGVuZW15LCBwbGF5ZXIpO1xuICAgIH0sIDQwMCk7XG4gIH1cblxuICBmdW5jdGlvbiBoYW5kbGVFbmVteVR1cm4oKSB7XG4gICAgaWYgKGVuZW15LmF0dGFjayhwbGF5ZXIsIC4uLmNlbGwuaWQuc3BsaXQoXCIsXCIpKSkge1xuICAgICAgaGFuZGxlVHVybkluZm9ybWF0aW9uKCk7XG5cbiAgICAgIGlmIChwbGF5ZXIuZ2V0TmF0dXJlKCkgPT09IFwiY29tcHV0ZXJcIikge1xuICAgICAgICBwbGF5Q29tcHV0ZXJUdXJuKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBwbGF5ZXIudG9nZ2xlVHVybigpO1xuICAgICAgICBlbmVteS50b2dnbGVUdXJuKCk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgY2VsbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGlmIChpc0dhbWVGaW5pc2hlZCgpKSByZXR1cm47XG5cbiAgICBpZiAoZW5lbXkuZ2V0VHVybigpKSB7XG4gICAgICBoYW5kbGVFbmVteVR1cm4oKTtcbiAgICAgIHJlbmRlckdhbWVib2FyZChwbGF5ZXIsIGVuZW15KTtcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IGdhbWVib2FyZENlbGwgPSBnYW1lQm9hcmRBcnJheVtpXVtqXTtcblxuICBpZiAoZ2FtZWJvYXJkQ2VsbCkge1xuICAgIGlmIChnYW1lYm9hcmRDZWxsLmlzSGl0KSB7XG4gICAgICBjZWxsLmNsYXNzTGlzdC5hZGQoXCJzaGlwXCIpO1xuXG4gICAgICBpZiAoZ2FtZWJvYXJkQ2VsbC5zaGlwLmlzU3VuaygpKSB7XG4gICAgICAgIGNlbGwuYXBwZW5kQ2hpbGQoR2VuZXJhdGVJY29uKCkuZGVzdHJveWVkKTtcblxuICAgICAgICBjZWxsLmNsYXNzTGlzdC5hZGQoZ2FtZWJvYXJkQ2VsbC5zaGlwLmdldE5hbWUoKS50b0xvd2VyQ2FzZSgpKTtcbiAgICAgIH0gZWxzZSBjZWxsLmFwcGVuZENoaWxkKEdlbmVyYXRlSWNvbigpLmZpcmUpO1xuXG4gICAgICByZXR1cm4gY2VsbDtcbiAgICB9XG5cbiAgICBpZiAoZ2FtZWJvYXJkQ2VsbCA9PT0gXCJtaXNzZWRcIikge1xuICAgICAgY2VsbC5hcHBlbmRDaGlsZChHZW5lcmF0ZUljb24oKS5taXNzZWQpO1xuICAgICAgcmV0dXJuIGNlbGw7XG4gICAgfVxuXG4gICAgaWYgKHBsYXllci5nZXROYXR1cmUoKSA9PT0gXCJodW1hblwiKSB7XG4gICAgICBjZWxsLmNsYXNzTGlzdC5hZGQoZ2FtZWJvYXJkQ2VsbC5nZXROYW1lKCkudG9Mb3dlckNhc2UoKSwgXCJzaGlwXCIpO1xuICAgICAgcmV0dXJuIGNlbGw7XG4gICAgfVxuICB9XG4gIHJldHVybiBjZWxsO1xufVxuIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29tcHV0ZXJBSSgpIHtcbiAgZnVuY3Rpb24gZ2V0UmFuZG9tTnVtYmVyKCkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMCk7XG4gIH1cbiAgZnVuY3Rpb24gY29tcHV0ZXJBdHRhY2socGxheWVyLCBlbmVteSkge1xuICAgIGlmICghcGxheWVyLmF0dGFjayhlbmVteSwgZ2V0UmFuZG9tTnVtYmVyKCksIGdldFJhbmRvbU51bWJlcigpKSkgY29tcHV0ZXJBdHRhY2socGxheWVyLCBlbmVteSk7XG4gIH1cbiAgcmV0dXJuIHsgY29tcHV0ZXJBdHRhY2sgfTtcbn1cbiIsIi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuaW1wb3J0IGdhbWVib2FyZFN0eWxlIGZyb20gXCIuLi9zdHlsZXMvZ2FtZWJvYXJkLmNzc1wiO1xuaW1wb3J0IHJlbmRlckNlbGwgZnJvbSBcIi4vUmVuZGVyQ2VsbFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW5kZXJHYW1lYm9hcmQocGxheWVyLCBlbmVteSkge1xuICBjb25zdCBnYW1lYm9hcmRDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjJHtwbGF5ZXIuZ2V0TmF0dXJlKCl9YCk7XG4gIGNvbnN0IGdhbWVCb2FyZEFycmF5ID0gcGxheWVyLmdldEdhbWVib2FyZCgpLmdldEdhbWVib2FyZEFycmF5KCk7XG4gIGdhbWVib2FyZENvbnRhaW5lci5pbm5lckhUTUwgPSBcIlwiO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZ2FtZUJvYXJkQXJyYXkubGVuZ3RoOyBpICs9IDEpIHtcbiAgICBmb3IgKGxldCBqID0gMDsgaiA8IGdhbWVCb2FyZEFycmF5Lmxlbmd0aDsgaiArPSAxKSB7XG4gICAgICBjb25zdCBjZWxsID0gcmVuZGVyQ2VsbChnYW1lQm9hcmRBcnJheSwgaSwgaiwgcGxheWVyLCBlbmVteSwgcmVuZGVyR2FtZWJvYXJkKTtcbiAgICAgIGdhbWVib2FyZENvbnRhaW5lci5hcHBlbmRDaGlsZChjZWxsKTtcbiAgICB9XG4gIH1cbn1cbiIsIi8qIGVzbGludC1kaXNhYmxlIG5vLWxvb3AtZnVuYyAqL1xuLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuaW1wb3J0IGdhbWVib2FyZFN0eWxlIGZyb20gXCIuLi8uLi9zdHlsZXMvZ2FtZWJvYXJkLmNzc1wiO1xuaW1wb3J0IGNyZWF0ZUh0bWxFbGVtZW50IGZyb20gXCIuLi8uLi9oZWxwZXJGdW5jdGlvbi9DcmVhdGVIdG1sRWxlbWVudFwiO1xuaW1wb3J0IFNoaXAgZnJvbSBcIi4uL1NoaXBcIjtcbmltcG9ydCByZW5kZXJTaGlwVGFibGUgZnJvbSBcIi4vUmVuZGVyU2hpcFRhYmxlXCI7XG5pbXBvcnQgcmVuZGVyR2FtZWJvYXJkIGZyb20gXCIuLi9SZW5kZXJHYW1lYm9hcmRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUmVuZGVyQ3JlYXRvckdhbWVib2FyZChcbiAgcGxheWVyT25lLFxuICBwbGF5ZXJUd28sXG4gIHNoaXBzQXJyYXksXG4gIGdldFNlbGVjdGVkU2hpcCxcbiAgZGlhbG9nLFxuICB1cGRhdGVTZWxlY3RlZFNoaXBcbikge1xuICBjb25zdCB3cmFwcGVyID0gY3JlYXRlSHRtbEVsZW1lbnQoXCJkaXZcIiwgeyBpZDogXCJnYW1lQ3JlYXRvcldyYXBwZXJcIiB9KTtcbiAgY29uc3QgZ2FtZWJvYXJkV3JhcHBlciA9IGNyZWF0ZUh0bWxFbGVtZW50KFwiZGl2XCIsIHsgaWQ6IFwiY3JlYXRpb25HYW1lYm9hcmRXcmFwcGVyXCIgfSk7XG4gIGNvbnN0IGdhbWVib2FyZENvbnRhaW5lciA9IGNyZWF0ZUh0bWxFbGVtZW50KFwiZGl2XCIsIHsgaWQ6IGBjcmVhdGlvbkdhbWVib2FyZGAsIGNsYXNzOiBcImdhbWVCb2FyZFwiIH0pO1xuICBjb25zdCBidXR0b25XcmFwcGVyID0gY3JlYXRlSHRtbEVsZW1lbnQoXCJkaXZcIiwgeyBpZDogXCJjcmVhdGlvbkJ1dHRvbldyYXBwZXJcIiB9KTtcbiAgY29uc3QgdG9nZ2xlQXhpcyA9IGNyZWF0ZUh0bWxFbGVtZW50KFwiYnV0dG9uXCIsIHsgaWQ6IFwidG9nZ2xlQXhpc0J0blwiLCBjbGFzczogXCJidXR0b25cIiB9KTtcbiAgY29uc3Qgc3RhcnRHYW1lQnRuID0gY3JlYXRlSHRtbEVsZW1lbnQoXCJidXR0b25cIiwgeyBpZDogXCJzdGFydEdhbWVCdG5cIiwgY2xhc3M6IFwiYnV0dG9uXCIgfSk7XG5cbiAgdG9nZ2xlQXhpcy50ZXh0Q29udGVudCA9IFwiaG9yaXpvbnRhbCBheGlzXCI7XG4gIHN0YXJ0R2FtZUJ0bi50ZXh0Q29udGVudCA9IFwiU3RhcnQgR2FtZVwiO1xuXG4gIGxldCBheGlzID0gXCJob3Jpem9udGFsXCI7XG4gIHRvZ2dsZUF4aXMuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBheGlzID0gYXhpcyA9PT0gXCJob3Jpem9udGFsXCIgPyBcInZlcnRpY2FsXCIgOiBcImhvcml6b250YWxcIjtcbiAgICB0b2dnbGVBeGlzLnRleHRDb250ZW50ID0gYCR7YXhpc30gYXhpc2A7XG4gIH0pO1xuXG4gIHN0YXJ0R2FtZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIHJlbmRlckdhbWVib2FyZChwbGF5ZXJPbmUsIHBsYXllclR3byk7XG4gICAgcmVuZGVyR2FtZWJvYXJkKHBsYXllclR3bywgcGxheWVyT25lKTtcbiAgICBkaWFsb2cuY2xvc2UoKTtcbiAgfSk7XG5cbiAgY29uc3QgZ2FtZWJvYXJkID0gcGxheWVyT25lLmdldEdhbWVib2FyZCgpLmdldEdhbWVib2FyZEFycmF5KCk7XG4gIHJlbmRlclNoaXBUYWJsZShzaGlwc0FycmF5LCB1cGRhdGVTZWxlY3RlZFNoaXAsIHdyYXBwZXIpO1xuXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgZ2FtZWJvYXJkLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgZm9yIChsZXQgaiA9IDA7IGogPCBnYW1lYm9hcmQubGVuZ3RoOyBqICs9IDEpIHtcbiAgICAgIGNvbnN0IGNlbGwgPSBjcmVhdGVIdG1sRWxlbWVudChcImRpdlwiLCB7IGlkOiBgJHtpfSwke2p9YCwgY2xhc3M6IFwiY2VsbFwiIH0pO1xuXG4gICAgICBpZiAoZ2FtZWJvYXJkW2ldW2pdKSBjZWxsLmNsYXNzTGlzdC5hZGQoZ2FtZWJvYXJkW2ldW2pdLmdldE5hbWUoKS50b0xvd2VyQ2FzZSgpLCBcInNoaXBcIik7XG5cbiAgICAgIGNlbGwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgY29uc3QgZm91bmRJbmRleCA9IHNoaXBzQXJyYXkuZmluZEluZGV4KChzaGlwKSA9PiBzaGlwLm5hbWUgPT09IGdldFNlbGVjdGVkU2hpcCgpKTtcblxuICAgICAgICBpZiAoXG4gICAgICAgICAgZ2V0U2VsZWN0ZWRTaGlwKCkgJiYgLy8gZmlyc3QgY2hlY2sgaXMgc2VsZWN0ZWQgc2hpcCBpcyBub3QgbnVsbFxuICAgICAgICAgIHNoaXBzQXJyYXlbZm91bmRJbmRleF0ucXVhbnRpdHkgJiYgLy8gdGhlbiBjaGVjayBpZiB0aGUgcXVhbnRpdHkgaXMgYWJvdmUgemVybyB0aGVuIHBsYWNlIHRoZSBzaGlwXG4gICAgICAgICAgcGxheWVyT25lLmdldEdhbWVib2FyZCgpLnBsYWNlU2hpcChTaGlwKGdldFNlbGVjdGVkU2hpcCgpKSwgaSwgaiwgYXhpcylcbiAgICAgICAgKSB7XG4gICAgICAgICAgc2hpcHNBcnJheVtmb3VuZEluZGV4XS5xdWFudGl0eSAtPSAxO1xuICAgICAgICAgIGdhbWVib2FyZFdyYXBwZXIucmVtb3ZlKCk7XG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzaGlwVGFibGVcIikucmVtb3ZlKCk7XG4gICAgICAgICAgUmVuZGVyQ3JlYXRvckdhbWVib2FyZChcbiAgICAgICAgICAgIHBsYXllck9uZSxcbiAgICAgICAgICAgIHBsYXllclR3byxcbiAgICAgICAgICAgIHNoaXBzQXJyYXksXG4gICAgICAgICAgICBnZXRTZWxlY3RlZFNoaXAsXG4gICAgICAgICAgICBkaWFsb2csXG4gICAgICAgICAgICB1cGRhdGVTZWxlY3RlZFNoaXBcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KTtcblxuICAgICAgZ2FtZWJvYXJkQ29udGFpbmVyLmFwcGVuZENoaWxkKGNlbGwpO1xuICAgIH1cbiAgfVxuICBidXR0b25XcmFwcGVyLmFwcGVuZENoaWxkKHRvZ2dsZUF4aXMpO1xuICBidXR0b25XcmFwcGVyLmFwcGVuZENoaWxkKHN0YXJ0R2FtZUJ0bik7XG4gIGdhbWVib2FyZFdyYXBwZXIuYXBwZW5kQ2hpbGQoZ2FtZWJvYXJkQ29udGFpbmVyKTtcbiAgZ2FtZWJvYXJkV3JhcHBlci5hcHBlbmRDaGlsZChidXR0b25XcmFwcGVyKTtcbiAgd3JhcHBlci5hcHBlbmRDaGlsZChnYW1lYm9hcmRXcmFwcGVyKTtcbiAgZGlhbG9nLmFwcGVuZENoaWxkKHdyYXBwZXIpO1xufVxuIiwiLyogZXNsaW50LWRpc2FibGUgbm8tcGFyYW0tcmVhc3NpZ24gKi9cbmltcG9ydCBjcmVhdGVIdG1sRWxlbWVudCBmcm9tIFwiLi4vLi4vaGVscGVyRnVuY3Rpb24vQ3JlYXRlSHRtbEVsZW1lbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVuZGVyU2hpcFRhYmxlKHNoaXBzQXJyYXksIHVwZGF0ZVNlbGVjdGVkU2hpcCwgd3JhcHBlcikge1xuICBjb25zdCBzaGlwVGFibGUgPSBjcmVhdGVIdG1sRWxlbWVudChcImRpdlwiLCB7IGlkOiBcInNoaXBUYWJsZVwiIH0pO1xuICBzaGlwc0FycmF5LmZvckVhY2goKHNoaXApID0+IHtcbiAgICBjb25zdCBzaGlwV3JhcHBlciA9IGNyZWF0ZUh0bWxFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgIGlkOiBgJHtzaGlwLm5hbWUudG9Mb3dlckNhc2UoKX1XcmFwcGVyYCxcbiAgICAgIGNsYXNzOiBcInNoaXBXcmFwcGVyXCIsXG4gICAgfSk7XG5cbiAgICBjb25zdCBuZXdTaGlwID0gY3JlYXRlSHRtbEVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgaWQ6IHNoaXAubmFtZSxcbiAgICAgIGNsYXNzOiBgc2hpcEVsZW1lbnQgJHtzaGlwLm5hbWUudG9Mb3dlckNhc2UoKX1gLFxuICAgIH0pO1xuICAgIG5ld1NoaXAudGV4dENvbnRlbnQgPSBzaGlwLm5hbWU7XG5cbiAgICBjb25zdCBxdWFudGl0eSA9IGNyZWF0ZUh0bWxFbGVtZW50KFwiZGl2XCIsIHsgaWQ6IHNoaXAubmFtZSwgY2xhc3M6IFwic2hpcFF1YW50aXR5XCIgfSk7XG4gICAgcXVhbnRpdHkudGV4dENvbnRlbnQgPSBzaGlwLnF1YW50aXR5O1xuXG4gICAgbmV3U2hpcC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgICAgaWYgKHNoaXAucXVhbnRpdHkpIHVwZGF0ZVNlbGVjdGVkU2hpcChzaGlwLm5hbWUpO1xuICAgIH0pO1xuXG4gICAgc2hpcFdyYXBwZXIuYXBwZW5kQ2hpbGQobmV3U2hpcCk7XG4gICAgc2hpcFdyYXBwZXIuYXBwZW5kQ2hpbGQocXVhbnRpdHkpO1xuXG4gICAgc2hpcFRhYmxlLmFwcGVuZENoaWxkKHNoaXBXcmFwcGVyKTtcbiAgfSk7XG4gIHdyYXBwZXIuYXBwZW5kQ2hpbGQoc2hpcFRhYmxlKTtcbn1cbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9nYW1lQ3JlYXRvckRpYWxvZy5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2dhbWVDcmVhdG9yRGlhbG9nLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZXMuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiaW1wb3J0IEdhbWVib2FyZCBmcm9tIFwiLi4vR2FtZWJvYXJkXCI7XG5pbXBvcnQgUGxheWVyIGZyb20gXCIuLi9QbGF5ZXJcIjtcbmltcG9ydCBSZW5kZXJHYW1lQ3JlYXRvckRpYWxvZyBmcm9tIFwiLi9SZW5kZXJHYW1lQ3JlYXRvckRpYWxvZ1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSZW5kZXJHYW1lbW9kZURpYWxvZygpIHtcbiAgY29uc3QgZGlhbG9nID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNnYW1lbW9kZURpYWxvZ1wiKTtcbiAgZGlhbG9nLnNob3dNb2RhbCgpO1xuXG4gIGNvbnN0IGh1bWFuQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNodW1hbkJ1dHRvblwiKTtcbiAgY29uc3QgYWlCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FpQnV0dG9uXCIpO1xuXG4gIGh1bWFuQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgLy8gZGlhbG9nLmNsb3NlKCk7XG4gICAgLy8gUmVuZGVyR2FtZUNyZWF0b3JEaWFsb2coUGxheWVyLCBHYW1lYm9hcmQsIGZhbHNlKTtcbiAgfSk7XG5cbiAgYWlCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBkaWFsb2cuY2xvc2UoKTtcbiAgICBSZW5kZXJHYW1lQ3JlYXRvckRpYWxvZyhQbGF5ZXIsIEdhbWVib2FyZCwgdHJ1ZSk7XG4gIH0pO1xufVxuIiwiaW1wb3J0IGdldENvbXB1dGVyUGxheWVyIGZyb20gXCIuLi9Db21wdXRlclBsYXllclwiO1xuaW1wb3J0IFJlbmRlckNyZWF0b3JHYW1lYm9hcmQgZnJvbSBcIi4vUmVuZGVyQ3JlYXRvckdhbWVib2FyZFwiO1xuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG5pbXBvcnQgZ2FtZUNyZWF0b3JTdHlsZSBmcm9tIFwiLi4vLi4vc3R5bGVzL2dhbWVDcmVhdG9yRGlhbG9nLmNzc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBSZW5kZXJHYW1lQ3JlYXRvckRpYWxvZyhQbGF5ZXIsIEdhbWVib2FyZCwgaXNWZXJzdXNBaSkge1xuICBjb25zdCBzaGlwc0FycmF5ID0gW1xuICAgIHsgbmFtZTogXCJDYXJyaWVyXCIsIHF1YW50aXR5OiAxIH0sXG4gICAgeyBuYW1lOiBcIkJhdHRsZXNoaXBcIiwgcXVhbnRpdHk6IDEgfSxcbiAgICB7IG5hbWU6IFwiQ3J1aXNlclwiLCBxdWFudGl0eTogMSB9LFxuICAgIHsgbmFtZTogXCJTdWJtYXJpbmVcIiwgcXVhbnRpdHk6IDIgfSxcbiAgICB7IG5hbWU6IFwiRGVzdHJveWVyXCIsIHF1YW50aXR5OiAzIH0sXG4gIF07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItY29uc3RcbiAgbGV0IHNlbGVjdGVkU2hpcCA9IG51bGw7XG4gIGZ1bmN0aW9uIHVwZGF0ZVNlbGVjdGVkU2hpcChuZXdWYWx1ZSkge1xuICAgIHNlbGVjdGVkU2hpcCA9IG5ld1ZhbHVlO1xuICB9XG4gIGZ1bmN0aW9uIGdldFNlbGVjdGVkU2hpcCgpIHtcbiAgICByZXR1cm4gc2VsZWN0ZWRTaGlwO1xuICB9XG4gIGNvbnN0IGRpYWxvZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZ2FtZUNyZWF0b3JEaWFsb2dcIik7XG4gIGRpYWxvZy5zaG93TW9kYWwoKTtcbiAgY29uc3QgZm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZ2FtZUNyZWF0b3JGb3JtXCIpO1xuXG4gIGZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoKSA9PiB7XG4gICAgY29uc3QgbmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGxheWVyTmFtZVwiKS52YWx1ZTtcbiAgICBjb25zdCBuZXdQbGF5ZXIgPSBQbGF5ZXIobmFtZSwgR2FtZWJvYXJkKTtcbiAgICBpZiAoaXNWZXJzdXNBaSkge1xuICAgICAgY29uc3QgY29tcHV0ZXIgPSBnZXRDb21wdXRlclBsYXllcihzaGlwc0FycmF5KTtcbiAgICAgIGRpYWxvZy5pbm5lckhUTUwgPSBcIlwiO1xuICAgICAgUmVuZGVyQ3JlYXRvckdhbWVib2FyZChuZXdQbGF5ZXIsIGNvbXB1dGVyLCBzaGlwc0FycmF5LCBnZXRTZWxlY3RlZFNoaXAsIGRpYWxvZywgdXBkYXRlU2VsZWN0ZWRTaGlwKTtcbiAgICB9XG4gIH0pO1xufVxuIiwiaW1wb3J0IFJlbmRlckdhbWVtb2RlRGlhbG9nIGZyb20gXCIuL21vZHVsZXMvZ2FtZUNyZWF0b3IvUmVuZGVyR2FtZW1vZGVEaWFsb2dcIjtcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuaW1wb3J0IHN0eWxlIGZyb20gXCIuL3N0eWxlcy5jc3NcIjtcblxuUmVuZGVyR2FtZW1vZGVEaWFsb2coKTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwibmMiLCJHYW1lYm9hcmQiLCJuYW1lIiwiZ2FtZUJvYXJkIiwicmVjZWl2ZWRDb29yZGluYXRlcyIsInBsYWNlZFNoaXBzIiwieSIsIkFycmF5IiwiZmlsbCIsImdldEdhbWVib2FyZEFycmF5IiwiZ2V0TmFtZSIsInBsYWNlU2hpcCIsInNoaXAiLCJ4IiwiYXhpcyIsImdldExlbmd0aCIsInJlY2VpdmVBdHRhY2siLCJjZWxsIiwic29tZSIsImNvb3JkaW5hdGVzIiwiaGl0IiwiaXNIaXQiLCJhcmVBbGxTdW5rIiwiZXZlcnkiLCJpc1N1bmsiLCJQbGF5ZXIiLCJuZXdHYW1lYm9hcmQiLCJ0dXJuIiwibmF0dXJlIiwicGxheWVyR2FtZWJvYXJkIiwiaXNUdXJuIiwiZ2V0TmF0dXJlIiwiZ2V0R2FtZWJvYXJkIiwiZ2V0VHVybiIsInRvZ2dsZVR1cm4iLCJhdHRhY2siLCJlbmVteVBsYXllciIsImhhc1dvbiIsIlNoaXAiLCJpbmNsdWRlcyIsImhpdFBvaW50cyIsImdldEhpdFBvaW50cyIsImdldENvbXB1dGVyUGxheWVyIiwic2hpcHNBcnJheSIsImNvbXB1dGVyUGxheWVyIiwiZ2V0UmFuZG9tTnVtYmVyIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwicGxhY2UiLCJmb3JFYWNoIiwicXVhbnRpdHkiLCJwbGFjZUNvbXB1dGVyU2hpcHMiLCJjcmVhdGVIdG1sRWxlbWVudCIsInRhZ05hbWUiLCJhdHRyaWJ1dGVzQXJyYXkiLCJrZXlzIiwicmVuZGVySW5mb3JtYXRpb24iLCJ0eXBlIiwicGxheWVyT25lIiwicGxheWVyVHdvIiwibWFpbkluZm9ybWF0aW9uIiwiZGVzY0luZm9ybWF0aW9uIiwidGV4dENvbnRlbnQiLCJsb2NhbHMiLCJHZW5lcmF0ZUljb24iLCJkZXN0cm95ZWQiLCJjbGFzcyIsImZpcmUiLCJtaXNzZWQiLCJyZW5kZXJDZWxsIiwiZ2FtZUJvYXJkQXJyYXkiLCJqIiwicGxheWVyIiwiZW5lbXkiLCJyZW5kZXJHYW1lYm9hcmQiLCJoYW5kbGVFbmVteVR1cm4iLCJzcGxpdCIsInNldFRpbWVvdXQiLCJjb21wdXRlckF0dGFjayIsImNvbXB1dGVyQUkiLCJhZGRFdmVudExpc3RlbmVyIiwiZ2FtZWJvYXJkQ2VsbCIsImNsYXNzTGlzdCIsImFkZCIsInRvTG93ZXJDYXNlIiwiZ2FtZWJvYXJkQ29udGFpbmVyIiwiaW5uZXJIVE1MIiwiUmVuZGVyQ3JlYXRvckdhbWVib2FyZCIsImdldFNlbGVjdGVkU2hpcCIsImRpYWxvZyIsInVwZGF0ZVNlbGVjdGVkU2hpcCIsIndyYXBwZXIiLCJnYW1lYm9hcmRXcmFwcGVyIiwiYnV0dG9uV3JhcHBlciIsInRvZ2dsZUF4aXMiLCJzdGFydEdhbWVCdG4iLCJjbG9zZSIsImdhbWVib2FyZCIsInNoaXBUYWJsZSIsInNoaXBXcmFwcGVyIiwibmV3U2hpcCIsInJlbmRlclNoaXBUYWJsZSIsImZvdW5kSW5kZXgiLCJmaW5kSW5kZXgiLCJzaG93TW9kYWwiLCJodW1hbkJ1dHRvbiIsImFpQnV0dG9uIiwiaXNWZXJzdXNBaSIsInNlbGVjdGVkU2hpcCIsIm5ld1ZhbHVlIiwiZ2V0RWxlbWVudEJ5SWQiLCJ2YWx1ZSIsIm5ld1BsYXllciIsImNvbXB1dGVyIiwiUmVuZGVyR2FtZUNyZWF0b3JEaWFsb2ciLCJSZW5kZXJHYW1lbW9kZURpYWxvZyJdLCJzb3VyY2VSb290IjoiIn0=